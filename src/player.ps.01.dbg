.include "hdr.asm"
.accu 16
.index 16
.16bit
.define __initPlayerCharacter_locals 0
.define __updatePlayerCharacterStats_locals 0
.define __addItemToCharacterInventory_locals 8
.define __removeItemFromCharacterInventory_locals 0
.define __getCharacterInventorySlot_locals 0
.define __setPlayerCharacterPosition_locals 0
.define __getPlayerCharacterPosition_locals 0
.define __levelUpPlayerCharacter_locals 0
.define __healPlayerCharacter_locals 0
.define __restorePlayerCharacterTimeEnergy_locals 0

.SECTION ".initPlayerCharactertext_0x0" SUPERFREE

initPlayerCharacter:
; sub sp,#__initPlayerCharacter_locals
.ifgr __initPlayerCharacter_locals 0
tsa
sec
sbc #__initPlayerCharacter_locals
tas
.endif
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #120,tcc__r0
lda.w #120
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x0 fc 0x10
; st2 tcc__r0, [playerCharacter,16]
lda.b tcc__r0
sta.l playerCharacter + 16
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #104,tcc__r0
lda.w #104
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x0 fc 0x12
; st2 tcc__r0, [playerCharacter,18]
lda.b tcc__r0
sta.l playerCharacter + 18
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #100,tcc__r0
lda.w #100
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [playerCharacter,0]
lda.b tcc__r0
sta.l playerCharacter + 0
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #100,tcc__r0
lda.w #100
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x2
; st2 tcc__r0, [playerCharacter,2]
lda.b tcc__r0
sta.l playerCharacter + 2
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #50,tcc__r0
lda.w #50
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x4
; st2 tcc__r0, [playerCharacter,4]
lda.b tcc__r0
sta.l playerCharacter + 4
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #50,tcc__r0
lda.w #50
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x6
; st2 tcc__r0, [playerCharacter,6]
lda.b tcc__r0
sta.l playerCharacter + 6
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0xc
; st1 tcc__r0, [playerCharacter,12]
sep #$20
lda.b tcc__r0
sta.l playerCharacter + 12
rep #$20
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x8
; st2 tcc__r0, [playerCharacter,8]
lda.b tcc__r0
sta.l playerCharacter + 8
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #100,tcc__r0
lda.w #100
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0xa
; st2 tcc__r0, [playerCharacter,10]
lda.b tcc__r0
sta.l playerCharacter + 10
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #10,tcc__r0
lda.w #10
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0xd
; st1 tcc__r0, [playerCharacter,13]
sep #$20
lda.b tcc__r0
sta.l playerCharacter + 13
rep #$20
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #5,tcc__r0
lda.w #5
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0xe
; st1 tcc__r0, [playerCharacter,14]
sep #$20
lda.b tcc__r0
sta.l playerCharacter + 14
rep #$20
; push2 imm r 0xf0
pea.w 320
; push2 imm r 0xf0
pea.w 0
; push4 imm r 0x2f0
pea.w :playerCharacter
pea.w playerCharacter + 20
; call r 0x2f0
jsr.l memset
; add sp, #8
tsa
clc
adc #8
tas
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x154
; st1 tcc__r0, [playerCharacter,340]
sep #$20
lda.b tcc__r0
sta.l playerCharacter + 340
rep #$20
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x155
; st1 tcc__r0, [playerCharacter,341]
sep #$20
lda.b tcc__r0
sta.l playerCharacter + 341
rep #$20
; gsym_addr t 0 a 3014 ind 3014
; ERROR no jump found to patch
; add sp, #__initPlayerCharacter_locals
.ifgr __initPlayerCharacter_locals 0
tsa
clc
adc #__initPlayerCharacter_locals
tas
.endif
rtl
.ENDS

.SECTION ".updatePlayerCharacterStatstext_0x1" SUPERFREE

updatePlayerCharacterStats:
; sub sp,#__updatePlayerCharacterStats_locals
.ifgr __updatePlayerCharacterStats_locals 0
tsa
sec
sbc #__updatePlayerCharacterStats_locals
tas
.endif
; load 0
; type 16 reg 0x3f0 extra 0x25d5000
; ld2 [playerCharacter + 0], tcc__r0
lda.l playerCharacter + 0
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x25d5000
; ld2 [playerCharacter + 2], tcc__r1
lda.l playerCharacter + 2
sta.b tcc__r1
; gen_opi len 2 op 0x97
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq +
bcs ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 3827 ind 3827
; gsym_addr t 0 a 3864 ind 3864
; ERROR no jump found to patch
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 3983 ind 3983
; cmp op 0x95 inv 1 v 243 r 3983
; cmp ne
bne +
; gsym_addr t 0 a 4070 ind 4070
; ERROR no jump found to patch
brl __local_0
+
; gtst finished; t 3983
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [playerCharacter + 2], tcc__r0
lda.l playerCharacter + 2
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [playerCharacter,0]
lda.b tcc__r0
sta.l playerCharacter + 0
__local_0:
; gsym_addr t 3983 a 4402 ind 4402
; load 0
; type 16 reg 0x3f0 extra 0x25d5000
; ld2 [playerCharacter + 4], tcc__r0
lda.l playerCharacter + 4
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x25d5000
; ld2 [playerCharacter + 6], tcc__r1
lda.l playerCharacter + 6
sta.b tcc__r1
; gen_opi len 2 op 0x97
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq +
bcs ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 4810 ind 4810
; gsym_addr t 0 a 4847 ind 4847
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 4935 ind 4935
; cmp op 0x95 inv 1 v 243 r 4935
; cmp ne
bne +
; gsym_addr t 0 a 5022 ind 5022
brl __local_1
+
; gtst finished; t 4935
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [playerCharacter + 6], tcc__r0
lda.l playerCharacter + 6
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x4
; st2 tcc__r0, [playerCharacter,4]
lda.b tcc__r0
sta.l playerCharacter + 4
__local_1:
; gsym_addr t 4935 a 5323 ind 5323
__local_4:
; load 0
; type 16 reg 0x3f0 extra 0x25d5000
; ld2 [playerCharacter + 8], tcc__r0
lda.l playerCharacter + 8
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x25d5000
; ld2 [playerCharacter + 10], tcc__r1
lda.l playerCharacter + 10
sta.b tcc__r1
; gen_opi len 2 op 0x93
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
bcs ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 5727 ind 5727
; gsym_addr t 0 a 5764 ind 5764
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 5852 ind 5852
; cmp op 0x95 inv 1 v 243 r 5852
; cmp ne
bne +
; gsym_addr t 0 a 5939 ind 5939
brl __local_2
+
; gtst finished; t 5852
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [playerCharacter + 12], tcc__r0
lda.w #0
sep #$20
lda.l playerCharacter + 12
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x9c
; cmpcd tcc__r0, #99
ldx #1
lda.b tcc__r0
sec
sbc.w #99
tay
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 5852 v 5 r 6293 ind 6293
; gsym_addr t 5852 a 6333 ind 6333
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 5852 v 243 r 6424 ind 6424
; cmp op 0x95 inv 1 v 243 r 6424
; cmp ne
bne +
__local_2:
; gsym_addr t 5852 a 6514 ind 6514
brl __local_3
+
; gtst finished; t 6424
; gtst inv 1 t 0 v 245 r 6589 ind 6589
; VT_jmp r 6589 t 0 ji 1 inv 1 vtop->c.i 6424
; gsym_addr t 0 a 6674 ind 6674
; gtst finished; t 6424
; call r 0x2f0
jsr.l levelUpPlayerCharacter
; gjmp_addr 5358 at 6774
jmp.w __local_4
; gsym_addr t 6774 a 5358 ind 6815
__local_3:
; gsym_addr t 6424 a 6850 ind 6850
; gsym_addr t 0 a 5358 ind 6885
; gsym_addr t 0 a 6917 ind 6917
; add sp, #__updatePlayerCharacterStats_locals
.ifgr __updatePlayerCharacterStats_locals 0
tsa
clc
adc #__updatePlayerCharacterStats_locals
tas
.endif
rtl
.ENDS

.SECTION ".addItemToCharacterInventorytext_0x2" SUPERFREE

addItemToCharacterInventory:
; sub sp,#__addItemToCharacterInventory_locals
.ifgr __addItemToCharacterInventory_locals 0
tsa
sec
sbc #__addItemToCharacterInventory_locals
tas
.endif
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x51f2 ft 0x11 fc 0xfffffffe
; st1 tcc__r0, [sp,-2]
; stack adjust: fc + disp - loc - 256 -254
sep #$20
lda.b tcc__r0
sta -2 + __addItemToCharacterInventory_locals + 1,s
rep #$20
__local_7:
; load 0
; type 17 reg 0x51f2 extra 0x7265746e
; ld1 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc - 256 -254
lda.w #0
sep #$20
lda -2 + __addItemToCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x9c
; cmpcd tcc__r0, #16
ldx #1
lda.b tcc__r0
sec
sbc.w #16
tay
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 7967 ind 7967
; gsym_addr t 0 a 8004 ind 8004
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 8092 ind 8092
; cmp op 0x95 inv 1 v 243 r 8092
; cmp ne
bne +
; gsym_addr t 0 a 8179 ind 8179
brl __local_5
+
; gtst finished; t 8092
; gjmp_addr 0 at 8251
jmp.w __local_6
; gsym_addr t 8251 a 0 ind 8289
__local_13:
; load 0
; type 17 reg 0x51f2 extra 0x7265746e
; ld1 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc - 256 -254
lda.w #0
sep #$20
lda -2 + __addItemToCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -2 r type 0x11)
; length xxy 2 vtop->type 0x0
inc.b tcc__r0
; store r 0x0 fr 0x51f2 ft 0x11 fc 0xfffffffe
; st1 tcc__r0, [sp,-2]
; stack adjust: fc + disp - loc - 256 -254
sep #$20
lda.b tcc__r0
sta -2 + __addItemToCharacterInventory_locals + 1,s
rep #$20
; gjmp_addr 7626 at 8973
jmp.w __local_7
; gsym_addr t 8973 a 7626 ind 9014
__local_6:
; gsym_addr t 8251 a 9049 ind 9049
; load 0
; type 17 reg 0x51f2 extra 0x7265746e
; ld1 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc - 256 -254
lda.w #0
sep #$20
lda -2 + __addItemToCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op *
; mul #20, tcc__r0
lda.w #20
sta.b tcc__r9
lda.b tcc__r0
sta.b tcc__r10
jsr.l tcc__mul
sta.b tcc__r0
; load 1
; type 36 reg 0x2f0 extra 0x0
; ld320 #playerCharacter + 20, tcc__r1 (type 0x24)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:playerCharacter
sta.b tcc__r1h
lda.w #playerCharacter + 20
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x24 c 20 r type 0x3961af80)
; length xxy 320 vtop->type 0x24
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 0 reg 0x101 extra 0x25d5000
; ld2 [tcc__r1,0],tcc__r0
lda.b [tcc__r1]
sta.b tcc__r0
; load 1
; type 0 reg 0x1f2 extra 0x25d5000
; ld2 [sp,3],tcc__r1
; stack adjust: fc + disp - loc - 256 -249
lda 3 + __addItemToCharacterInventory_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 10197 ind 10197
; gsym_addr t 0 a 10236 ind 10236
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 10326 ind 10326
; cmp op 0x95 inv 1 v 243 r 10326
; cmp ne
bne +
; gsym_addr t 0 a 10416 ind 10416
brl __local_8
+
; gtst finished; t 10326
; load 0
; type 17 reg 0x51f2 extra 0x7265746e
; ld1 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc - 256 -254
lda.w #0
sep #$20
lda -2 + __addItemToCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op *
; mul #20, tcc__r0
lda.w #20
sta.b tcc__r9
lda.b tcc__r0
sta.b tcc__r10
jsr.l tcc__mul
sta.b tcc__r0
; load 1
; type 36 reg 0x2f0 extra 0x0
; ld320 #playerCharacter + 20, tcc__r1 (type 0x24)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:playerCharacter
sta.b tcc__r1h
lda.w #playerCharacter + 20
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x24 c 20 r type 0x3961af80)
; length xxy 320 vtop->type 0x24
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 20 r type 0x3961af80)
; length xxy 4 vtop->type 0x4
inc.b tcc__r1
inc.b tcc__r1
; load 0
; type 17 reg 0x5101 extra 0x0
; ld1 [tcc__r1,0],tcc__r0
lda.w #0
sep #$20
lda.b [tcc__r1]
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x9c
; cmpcd tcc__r0, #99
ldx #1
lda.b tcc__r0
sec
sbc.w #99
tay
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 10326 v 5 r 11622 ind 11622
; gsym_addr t 10326 a 11665 ind 11665
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 10326 v 243 r 11759 ind 11759
; cmp op 0x95 inv 1 v 243 r 11759
; cmp ne
bne +
__local_8:
; gsym_addr t 10326 a 11853 ind 11853
brl __local_9
+
; gtst finished; t 11759
; gtst inv 1 t 0 v 245 r 11932 ind 11932
; VT_jmp r 11932 t 0 ji 1 inv 1 vtop->c.i 11759
; gsym_addr t 0 a 12021 ind 12021
; gtst finished; t 11759
; load 0
; type 17 reg 0x51f2 extra 0x7265746e
; ld1 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc - 256 -254
lda.w #0
sep #$20
lda -2 + __addItemToCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op *
; mul #20, tcc__r0
lda.w #20
sta.b tcc__r9
lda.b tcc__r0
sta.b tcc__r10
jsr.l tcc__mul
sta.b tcc__r0
; load 1
; type 36 reg 0x2f0 extra 0x0
; ld320 #playerCharacter + 20, tcc__r1 (type 0x24)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:playerCharacter
sta.b tcc__r1h
lda.w #playerCharacter + 20
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x24 c 20 r type 0x0)
; length xxy 320 vtop->type 0x24
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 20 r type 0x0)
; length xxy 4 vtop->type 0x4
inc.b tcc__r1
inc.b tcc__r1
; load 0
; type 17 reg 0x5101 extra 0x0
; ld1 [tcc__r1,0],tcc__r0
lda.w #0
sep #$20
lda.b [tcc__r1]
rep #$20
sta.b tcc__r0
; load 1
; type 0 reg 0xf0 extra 0x25d5000
; ld2 #99,tcc__r1
lda.w #99
sta.b tcc__r1
; gen_opi len 2 op -
; sbc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x0 c 99 r type 0x11)
; length xxy 2 vtop->type 0x0
sec
lda.b tcc__r1
sbc.b tcc__r0
sta.b tcc__r1
; store r 0x1 fr 0x51f2 ft 0x11 fc 0xffffffff
; st1 tcc__r1, [sp,-1]
; stack adjust: fc + disp - loc - 256 -253
sep #$20
lda.b tcc__r1
sta -1 + __addItemToCharacterInventory_locals + 1,s
rep #$20
; load 0
; type 17 reg 0x1f2 extra 0x6e696472
; ld1 [sp,5],tcc__r0
; stack adjust: fc + disp - loc - 256 -247
lda.w #0
sep #$20
lda 5 + __addItemToCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r0
; load 1
; type 17 reg 0x51f2 extra 0x45522065
; ld1 [sp,-1],tcc__r1
; stack adjust: fc + disp - loc - 256 -253
lda.w #0
sep #$20
lda -1 + __addItemToCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r1
; gen_opi len 2 op 0x9e
; cmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq +++
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 14064 ind 14064
; gsym_addr t 0 a 14103 ind 14103
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 14193 ind 14193
; cmp op 0x95 inv 1 v 243 r 14193
; cmp ne
bne +
; gsym_addr t 0 a 14283 ind 14283
brl __local_10
+
; gtst finished; t 14193
; load 0
; type 17 reg 0x51f2 extra 0x7265746e
; ld1 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc - 256 -254
lda.w #0
sep #$20
lda -2 + __addItemToCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op *
; mul #20, tcc__r0
lda.w #20
sta.b tcc__r9
lda.b tcc__r0
sta.b tcc__r10
jsr.l tcc__mul
sta.b tcc__r0
; load 1
; type 36 reg 0x2f0 extra 0x0
; ld320 #playerCharacter + 20, tcc__r1 (type 0x24)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:playerCharacter
sta.b tcc__r1h
lda.w #playerCharacter + 20
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x24 c 20 r type 0x3961af80)
; length xxy 320 vtop->type 0x24
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 20 r type 0x3961af80)
; length xxy 4 vtop->type 0x4
inc.b tcc__r1
inc.b tcc__r1
; load 0
; type 17 reg 0x5101 extra 0x0
; ld1 [tcc__r1,0],tcc__r0
lda.w #0
sep #$20
lda.b [tcc__r1]
rep #$20
sta.b tcc__r0
; load 2
; type 17 reg 0x1f2 extra 0x6e696472
; ld1 [sp,5],tcc__r2
; stack adjust: fc + disp - loc - 256 -247
lda.w #0
sep #$20
lda 5 + __addItemToCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r2
; gen_opi len 2 op +
; adc tcc__r2 (0x2), tcc__r0 (0x0) (fr type 0x0 c 20 r type 0x11)
; length xxy 2 vtop->type 0x0
clc
lda.b tcc__r0
adc.b tcc__r2
sta.b tcc__r0
; store r 0x0 fr 0x5101 ft 0x11 fc 0x14
; st1 tcc__r0, [tcc__r1,0]
sep #$20
lda.b tcc__r0
sta.b [tcc__r1]
rep #$20
; load 0
; type 17 reg 0xf0 extra 0x20200a73
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; gjmp_addr 0 at 15919
jmp.w __local_11
; gsym_addr t 15919 a 0 ind 15959
; gjmp_addr 0 at 15993
jmp.w __local_12
; gsym_addr t 15993 a 0 ind 16033
__local_10:
; gsym_addr t 14193 a 16067 ind 16067
; load 0
; type 17 reg 0x51f2 extra 0x7265746e
; ld1 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc - 256 -254
lda.w #0
sep #$20
lda -2 + __addItemToCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op *
; mul #20, tcc__r0
lda.w #20
sta.b tcc__r9
lda.b tcc__r0
sta.b tcc__r10
jsr.l tcc__mul
sta.b tcc__r0
; load 1
; type 36 reg 0x2f0 extra 0x0
; ld320 #playerCharacter + 20, tcc__r1 (type 0x24)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:playerCharacter
sta.b tcc__r1h
lda.w #playerCharacter + 20
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x24 c 20 r type 0x3961af80)
; length xxy 320 vtop->type 0x24
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 20 r type 0x3961af80)
; length xxy 4 vtop->type 0x4
inc.b tcc__r1
inc.b tcc__r1
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #99,tcc__r0
lda.w #99
sta.b tcc__r0
; store r 0x0 fr 0x5101 ft 0x11 fc 0x14
; st1 tcc__r0, [tcc__r1,0]
sep #$20
lda.b tcc__r0
sta.b [tcc__r1]
rep #$20
; load 0
; type 17 reg 0x1f2 extra 0x6e696472
; ld1 [sp,5],tcc__r0
; stack adjust: fc + disp - loc - 256 -247
lda.w #0
sep #$20
lda 5 + __addItemToCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r0
; load 1
; type 17 reg 0x51f2 extra 0x45522065
; ld1 [sp,-1],tcc__r1
; stack adjust: fc + disp - loc - 256 -253
lda.w #0
sep #$20
lda -1 + __addItemToCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r1
; gen_opi len 2 op -
; sbc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x0 c 5 r type 0x11)
; length xxy 2 vtop->type 0x0
sec
lda.b tcc__r0
sbc.b tcc__r1
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x11 fc 0x5
; st1 tcc__r0, [sp,5]
; stack adjust: fc + disp - loc - 256 -247
sep #$20
lda.b tcc__r0
sta 5 + __addItemToCharacterInventory_locals + 1,s
rep #$20
__local_12:
; gsym_addr t 15993 a 17927 ind 17927
__local_9:
; gsym_addr t 11759 a 17965 ind 17965
; gjmp_addr 8321 at 18003
jmp.w __local_13
; gsym_addr t 18003 a 8321 ind 18046
__local_5:
; gsym_addr t 8092 a 18083 ind 18083
; gsym_addr t 0 a 8321 ind 18120
; load 0
; type 17 reg 0x1f2 extra 0x6e696472
; ld1 [sp,5],tcc__r0
; stack adjust: fc + disp - loc - 256 -247
lda.w #0
sep #$20
lda 5 + __addItemToCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x9f
; cmpcd tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc.w #0
tay
beq ++
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 18496 ind 18496
; gsym_addr t 0 a 18535 ind 18535
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 18625 ind 18625
; cmp op 0x95 inv 1 v 243 r 18625
; cmp ne
bne +
; gsym_addr t 0 a 18715 ind 18715
brl __local_14
+
; gtst finished; t 18625
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [playerCharacter + 340], tcc__r0
lda.w #0
sep #$20
lda.l playerCharacter + 340
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x9c
; cmpcd tcc__r0, #16
ldx #1
lda.b tcc__r0
sec
sbc.w #16
tay
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 18625 v 5 r 19075 ind 19075
; gsym_addr t 18625 a 19118 ind 19118
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 18625 v 243 r 19212 ind 19212
; cmp op 0x95 inv 1 v 243 r 19212
; cmp ne
bne +
__local_14:
; gsym_addr t 18625 a 19306 ind 19306
brl __local_15
+
; gtst finished; t 19212
; gtst inv 1 t 0 v 245 r 19386 ind 19386
; VT_jmp r 19386 t 0 ji 1 inv 1 vtop->c.i 19212
; gsym_addr t 0 a 19475 ind 19475
; gtst finished; t 19212
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x51f2 ft 0x11 fc 0xfffffffe
; st1 tcc__r0, [sp,-2]
; stack adjust: fc + disp - loc - 256 -254
sep #$20
lda.b tcc__r0
sta -2 + __addItemToCharacterInventory_locals + 1,s
rep #$20
__local_18:
; load 0
; type 17 reg 0x51f2 extra 0x7265746e
; ld1 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc - 256 -254
lda.w #0
sep #$20
lda -2 + __addItemToCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x9c
; cmpcd tcc__r0, #16
ldx #1
lda.b tcc__r0
sec
sbc.w #16
tay
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 20149 ind 20149
; gsym_addr t 0 a 20188 ind 20188
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 20278 ind 20278
; cmp op 0x95 inv 1 v 243 r 20278
; cmp ne
bne +
; gsym_addr t 0 a 20368 ind 20368
brl __local_16
+
; gtst finished; t 20278
; gjmp_addr 0 at 20444
jmp.w __local_17
; gsym_addr t 20444 a 0 ind 20484
__local_24:
; load 0
; type 17 reg 0x51f2 extra 0x7265746e
; ld1 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc - 256 -254
lda.w #0
sep #$20
lda -2 + __addItemToCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -2 r type 0x11)
; length xxy 2 vtop->type 0x0
inc.b tcc__r0
; store r 0x0 fr 0x51f2 ft 0x11 fc 0xfffffffe
; st1 tcc__r0, [sp,-2]
; stack adjust: fc + disp - loc - 256 -254
sep #$20
lda.b tcc__r0
sta -2 + __addItemToCharacterInventory_locals + 1,s
rep #$20
; gjmp_addr 19808 at 21170
jmp.w __local_18
; gsym_addr t 21170 a 19808 ind 21214
__local_17:
; gsym_addr t 20444 a 21252 ind 21252
; load 0
; type 17 reg 0x51f2 extra 0x7265746e
; ld1 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc - 256 -254
lda.w #0
sep #$20
lda -2 + __addItemToCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op *
; mul #20, tcc__r0
lda.w #20
sta.b tcc__r9
lda.b tcc__r0
sta.b tcc__r10
jsr.l tcc__mul
sta.b tcc__r0
; load 1
; type 36 reg 0x2f0 extra 0x0
; ld320 #playerCharacter + 20, tcc__r1 (type 0x24)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:playerCharacter
sta.b tcc__r1h
lda.w #playerCharacter + 20
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x24 c 20 r type 0x3961af80)
; length xxy 320 vtop->type 0x24
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 0 reg 0x101 extra 0x25d5000
; ld2 [tcc__r1,0],tcc__r0
lda.b [tcc__r1]
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc #0
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 22218 ind 22218
; gsym_addr t 0 a 22257 ind 22257
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 22347 ind 22347
; cmp op 0x95 inv 1 v 243 r 22347
; cmp ne
bne +
; gsym_addr t 0 a 22437 ind 22437
brl __local_19
+
; gtst finished; t 22347
; load 0
; type 17 reg 0x51f2 extra 0x7265746e
; ld1 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc - 256 -254
lda.w #0
sep #$20
lda -2 + __addItemToCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op *
; mul #20, tcc__r0
lda.w #20
sta.b tcc__r9
lda.b tcc__r0
sta.b tcc__r10
jsr.l tcc__mul
sta.b tcc__r0
; load 1
; type 36 reg 0x2f0 extra 0x0
; ld320 #playerCharacter + 20, tcc__r1 (type 0x24)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:playerCharacter
sta.b tcc__r1h
lda.w #playerCharacter + 20
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x24 c 20 r type 0x3961af80)
; length xxy 320 vtop->type 0x24
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 5 reg 0x1f2 extra 0x0
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -249
lda 3 + __addItemToCharacterInventory_locals + 1,s
sta.b tcc__r0
; store r 0x0 fr 0x101 ft 0x5 fc 0x14
; st2 tcc__r0, [tcc__r1,0]
lda.b tcc__r0
sta.b [tcc__r1]
; load 0
; type 17 reg 0x51f2 extra 0x7265746e
; ld1 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc - 256 -254
lda.w #0
sep #$20
lda -2 + __addItemToCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op *
; mul #20, tcc__r0
lda.w #20
sta.b tcc__r9
lda.b tcc__r0
sta.b tcc__r10
jsr.l tcc__mul
sta.b tcc__r0
; load 1
; type 36 reg 0x2f0 extra 0x0
; ld320 #playerCharacter + 20, tcc__r1 (type 0x24)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:playerCharacter
sta.b tcc__r1h
lda.w #playerCharacter + 20
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x24 c 20 r type 0x3961af80)
; length xxy 320 vtop->type 0x24
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 20 r type 0x3961af80)
; length xxy 4 vtop->type 0x4
inc.b tcc__r1
inc.b tcc__r1
; load 0
; type 17 reg 0x1f2 extra 0x6e696472
; ld1 [sp,5],tcc__r0
; stack adjust: fc + disp - loc - 256 -247
lda.w #0
sep #$20
lda 5 + __addItemToCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x9f
; cmpcd tcc__r0, #99
ldx #1
lda.b tcc__r0
sec
sbc.w #99
tay
beq ++
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; saveregging
; store r 0x1 fr 0x1f2 ft 0x4 fc 0xfffffff8
; st4 tcc__r1, [sp,-8]
; stack adjust: fc + disp - loc - 256 -254
lda.b tcc__r1
sta -8 + __addItemToCharacterInventory_locals + 1,s
lda.b tcc__r1h
sta -6 + __addItemToCharacterInventory_locals + 1,s
; gtst inv 1 t 0 v 5 r 24967 ind 24967
; gsym_addr t 0 a 25006 ind 25006
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 25096 ind 25096
; cmp op 0x95 inv 1 v 243 r 25096
; cmp ne
bne +
; gsym_addr t 0 a 25186 ind 25186
brl __local_20
+
; gtst finished; t 25096
; gjmp_addr 0 at 25262
jmp.w __local_21
; gsym_addr t 25262 a 0 ind 25302
__local_20:
; gsym_addr t 25096 a 25336 ind 25336
; load 0
; type 17 reg 0x1f2 extra 0x6e696472
; ld1 [sp,5],tcc__r0
; stack adjust: fc + disp - loc - 256 -241
lda.w #0
sep #$20
lda 5 + __addItemToCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r0
; gjmp_addr 0 at 25576
jmp.w __local_22
; gsym_addr t 25576 a 0 ind 25616
__local_21:
; gsym_addr t 25262 a 25650 ind 25650
; load 0
; type 0 reg 0xf0 extra 0x24fef54
; ld2 #99,tcc__r0
lda.w #99
sta.b tcc__r0
__local_22:
; gsym_addr t 25576 a 25773 ind 25773
; load 1
; type 4 reg 0x1f2 extra 0x64ad
; ld4 [sp,-8],tcc__r1
; stack adjust: fc + disp - loc - 256 -254
lda -8 + __addItemToCharacterInventory_locals + 1,s
sta.b tcc__r1
lda -6 + __addItemToCharacterInventory_locals + 1,s
sta.b tcc__r1h
; store r 0x0 fr 0x101 ft 0x11 fc 0xfffffff8
; st1 tcc__r0, [tcc__r1,0]
sep #$20
lda.b tcc__r0
sta.b [tcc__r1]
rep #$20
; load 0
; type 17 reg 0x51f2 extra 0x7265746e
; ld1 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc - 256 -248
lda.w #0
sep #$20
lda -2 + __addItemToCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op *
; mul #20, tcc__r0
lda.w #20
sta.b tcc__r9
lda.b tcc__r0
sta.b tcc__r10
jsr.l tcc__mul
sta.b tcc__r0
; load 1
; type 36 reg 0x2f0 extra 0x0
; ld320 #playerCharacter + 20, tcc__r1 (type 0x24)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:playerCharacter
sta.b tcc__r1h
lda.w #playerCharacter + 20
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x24 c 20 r type 0x86)
; length xxy 320 vtop->type 0x24
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 20 r type 0x86)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.w #3
sta.b tcc__r1
; load 0
; type 0 reg 0x1f2 extra 0x398138b0
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -243
lda 3 + __addItemToCharacterInventory_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #2
asl.b tcc__r0
asl.b tcc__r0
; load 2
; type 292 reg 0x2f0 extra 0x2f2a0a2e
; ld24 #tccs_{WLA_FILENAME}_itemNames + 0, tcc__r2 (type 0x124)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:tccs_{WLA_FILENAME}_itemNames
sta.b tcc__r2h
lda.w #tccs_{WLA_FILENAME}_itemNames + 0
sta.b tcc__r2
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r2 (0x2) (fr type 0x124 c 0 r type 0x4)
; length xxy 24 vtop->type 0x124
clc
lda.b tcc__r2
adc.b tcc__r0
sta.b tcc__r2
; ldpush before load type 0x4 reg 0x102
; load 0
; type 4 reg 0x102 extra 0x0
; ld4 [tcc__r2,0],tcc__r0
ldy #0
lda.b [tcc__r2],y
sta.b tcc__r0
iny
iny
lda.b [tcc__r2],y
sta.b tcc__r0h
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; ldpush before load type 0x4 reg 0x1001
; ldpush4 (type 0x4 reg 0x1) tcc__r1
pei (tcc__r1h)
pei (tcc__r1)
; call r 0x2f0
jsr.l strcpy
; add sp, #8
tsa
clc
adc #8
tas
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [playerCharacter + 340], tcc__r0
lda.w #0
sep #$20
lda.l playerCharacter + 340
rep #$20
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 340 r type 0x11)
; length xxy 2 vtop->type 0x0
inc.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x154
; st1 tcc__r0, [playerCharacter,340]
sep #$20
lda.b tcc__r0
sta.l playerCharacter + 340
rep #$20
; load 0
; type 17 reg 0xf0 extra 0x20200a73
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; gjmp_addr 15919 at 28756
jmp.w __local_23
; gsym_addr t 28756 a 15919 ind 28800
__local_19:
; gsym_addr t 22347 a 28838 ind 28838
; gjmp_addr 20518 at 28876
jmp.w __local_24
; gsym_addr t 28876 a 20518 ind 28920
__local_16:
; gsym_addr t 20278 a 28958 ind 28958
; gsym_addr t 0 a 20518 ind 28996
__local_15:
; gsym_addr t 19212 a 29030 ind 29030
; load 0
; type 17 reg 0xf0 extra 0x20200a73
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; gjmp_addr 28756 at 29153
jmp.w __local_25
; gsym_addr t 29153 a 28756 ind 29197
__local_11:
__local_23:
__local_25:
; gsym_addr t 29153 a 29235 ind 29235
; add sp, #__addItemToCharacterInventory_locals
.ifgr __addItemToCharacterInventory_locals 0
tsa
clc
adc #__addItemToCharacterInventory_locals
tas
.endif
rtl
.ENDS

.SECTION ".removeItemFromCharacterInventorytext_0x3" SUPERFREE

removeItemFromCharacterInventory:
; sub sp,#__removeItemFromCharacterInventory_locals
.ifgr __removeItemFromCharacterInventory_locals 0
tsa
sec
sbc #__removeItemFromCharacterInventory_locals
tas
.endif
; load 0
; type 17 reg 0x1f2 extra 0x7265746e
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -251
lda.w #0
sep #$20
lda 3 + __removeItemFromCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x9d
; cmpcd tcc__r0, #16
ldx #1
lda.b tcc__r0
sec
sbc.w #16
tay
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 0 t 0 v 5 r 30047 ind 30047
; gsym_addr t 0 a 30086 ind 30086
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 0 t 0 v 243 r 30176 ind 30176
; cmp op 0x95 inv 0 v 243 r 30176
; cmp ne
beq +
; gsym_addr t 0 a 30266 ind 30266
brl __local_26
+
; gtst finished; t 30176
; load 0
; type 17 reg 0x1f2 extra 0x7265746e
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -251
lda.w #0
sep #$20
lda 3 + __removeItemFromCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op *
; mul #20, tcc__r0
lda.w #20
sta.b tcc__r9
lda.b tcc__r0
sta.b tcc__r10
jsr.l tcc__mul
sta.b tcc__r0
; load 1
; type 36 reg 0x2f0 extra 0x0
; ld320 #playerCharacter + 20, tcc__r1 (type 0x24)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:playerCharacter
sta.b tcc__r1h
lda.w #playerCharacter + 20
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x24 c 20 r type 0x3961af80)
; length xxy 320 vtop->type 0x24
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 0 reg 0x101 extra 0x25d5000
; ld2 [tcc__r1,0],tcc__r0
lda.b [tcc__r1]
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc #0
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 0 t 30176 v 5 r 31272 ind 31272
; gsym_addr t 30176 a 31315 ind 31315
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 0 t 30176 v 243 r 31409 ind 31409
; cmp op 0x95 inv 0 v 243 r 31409
; cmp ne
beq +
__local_26:
; gsym_addr t 30176 a 31503 ind 31503
brl __local_27
+
; gtst finished; t 31409
; gtst inv 1 t 0 v 244 r 31583 ind 31583
; VT_jmp r 31583 t 0 ji 0 inv 1 vtop->c.i 31409
; gjmp_addr 0 at 31672
jmp.w __local_28
; gsym_addr t 31672 a 0 ind 31712
__local_27:
; gsym_addr t 31409 a 31746 ind 31746
; gtst finished; t 31672
; load 0
; type 17 reg 0xf0 extra 0x6e696472
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; gjmp_addr 0 at 31894
jmp.w __local_29
; gsym_addr t 31894 a 0 ind 31934
__local_28:
; gsym_addr t 31672 a 31968 ind 31968
; load 0
; type 17 reg 0x1f2 extra 0x7265746e
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -251
lda.w #0
sep #$20
lda 3 + __removeItemFromCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op *
; mul #20, tcc__r0
lda.w #20
sta.b tcc__r9
lda.b tcc__r0
sta.b tcc__r10
jsr.l tcc__mul
sta.b tcc__r0
; load 1
; type 36 reg 0x2f0 extra 0x0
; ld320 #playerCharacter + 20, tcc__r1 (type 0x24)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:playerCharacter
sta.b tcc__r1h
lda.w #playerCharacter + 20
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x24 c 20 r type 0x3961af80)
; length xxy 320 vtop->type 0x24
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 20 r type 0x3961af80)
; length xxy 4 vtop->type 0x4
inc.b tcc__r1
inc.b tcc__r1
; load 0
; type 17 reg 0x5101 extra 0x0
; ld1 [tcc__r1,0],tcc__r0
lda.w #0
sep #$20
lda.b [tcc__r1]
rep #$20
sta.b tcc__r0
; load 1
; type 17 reg 0x1f2 extra 0x2c474220
; ld1 [sp,4],tcc__r1
; stack adjust: fc + disp - loc - 256 -250
lda.w #0
sep #$20
lda 4 + __removeItemFromCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r1
; gen_opi len 2 op 0x9d
; cmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 33354 ind 33354
; gsym_addr t 0 a 33393 ind 33393
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 33483 ind 33483
; cmp op 0x95 inv 1 v 243 r 33483
; cmp ne
bne +
; gsym_addr t 0 a 33573 ind 33573
brl __local_30
+
; gtst finished; t 33483
; load 0
; type 17 reg 0x1f2 extra 0x7265746e
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -251
lda.w #0
sep #$20
lda 3 + __removeItemFromCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op *
; mul #20, tcc__r0
lda.w #20
sta.b tcc__r9
lda.b tcc__r0
sta.b tcc__r10
jsr.l tcc__mul
sta.b tcc__r0
; load 1
; type 36 reg 0x2f0 extra 0x0
; ld320 #playerCharacter + 20, tcc__r1 (type 0x24)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:playerCharacter
sta.b tcc__r1h
lda.w #playerCharacter + 20
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x24 c 20 r type 0x3961af80)
; length xxy 320 vtop->type 0x24
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 20 r type 0x3961af80)
; length xxy 4 vtop->type 0x4
inc.b tcc__r1
inc.b tcc__r1
; load 0
; type 17 reg 0x5101 extra 0x0
; ld1 [tcc__r1,0],tcc__r0
lda.w #0
sep #$20
lda.b [tcc__r1]
rep #$20
sta.b tcc__r0
; load 2
; type 17 reg 0x1f2 extra 0x2c474220
; ld1 [sp,4],tcc__r2
; stack adjust: fc + disp - loc - 256 -250
lda.w #0
sep #$20
lda 4 + __removeItemFromCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r2
; gen_opi len 2 op -
; sbc tcc__r2 (0x2), tcc__r0 (0x0) (fr type 0x0 c 20 r type 0x11)
; length xxy 2 vtop->type 0x0
sec
lda.b tcc__r0
sbc.b tcc__r2
sta.b tcc__r0
; store r 0x0 fr 0x5101 ft 0x11 fc 0x14
; st1 tcc__r0, [tcc__r1,0]
sep #$20
lda.b tcc__r0
sta.b [tcc__r1]
rep #$20
; load 0
; type 17 reg 0x1f2 extra 0x7265746e
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -251
lda.w #0
sep #$20
lda 3 + __removeItemFromCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op *
; mul #20, tcc__r0
lda.w #20
sta.b tcc__r9
lda.b tcc__r0
sta.b tcc__r10
jsr.l tcc__mul
sta.b tcc__r0
; load 1
; type 36 reg 0x2f0 extra 0x0
; ld320 #playerCharacter + 20, tcc__r1 (type 0x24)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:playerCharacter
sta.b tcc__r1h
lda.w #playerCharacter + 20
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x24 c 20 r type 0x3961af80)
; length xxy 320 vtop->type 0x24
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 20 r type 0x3961af80)
; length xxy 4 vtop->type 0x4
inc.b tcc__r1
inc.b tcc__r1
; load 0
; type 17 reg 0x5101 extra 0x0
; ld1 [tcc__r1,0],tcc__r0
lda.w #0
sep #$20
lda.b [tcc__r1]
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc #0
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 36238 ind 36238
; gsym_addr t 0 a 36277 ind 36277
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 36367 ind 36367
; cmp op 0x95 inv 1 v 243 r 36367
; cmp ne
bne +
; gsym_addr t 0 a 36457 ind 36457
brl __local_31
+
; gtst finished; t 36367
; load 0
; type 17 reg 0x1f2 extra 0x7265746e
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -251
lda.w #0
sep #$20
lda 3 + __removeItemFromCharacterInventory_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op *
; mul #20, tcc__r0
lda.w #20
sta.b tcc__r9
lda.b tcc__r0
sta.b tcc__r10
jsr.l tcc__mul
sta.b tcc__r0
; load 1
; type 36 reg 0x2f0 extra 0x0
; ld320 #playerCharacter + 20, tcc__r1 (type 0x24)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:playerCharacter
sta.b tcc__r1h
lda.w #playerCharacter + 20
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x24 c 20 r type 0x3961af80)
; length xxy 320 vtop->type 0x24
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 5 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x101 ft 0x5 fc 0x14
; st2 tcc__r0, [tcc__r1,0]
lda.b tcc__r0
sta.b [tcc__r1]
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [playerCharacter + 340], tcc__r0
lda.w #0
sep #$20
lda.l playerCharacter + 340
rep #$20
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x1
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 340 r type 0x11)
; length xxy 2 vtop->type 0x0
dec.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x154
; st1 tcc__r0, [playerCharacter,340]
sep #$20
lda.b tcc__r0
sta.l playerCharacter + 340
rep #$20
__local_31:
; gsym_addr t 36367 a 37963 ind 37963
; load 0
; type 17 reg 0xf0 extra 0x6e696472
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; gjmp_addr 31894 at 38086
jmp.w __local_32
; gsym_addr t 38086 a 31894 ind 38130
__local_30:
; gsym_addr t 33483 a 38168 ind 38168
; load 0
; type 17 reg 0xf0 extra 0x6e696472
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; gjmp_addr 38086 at 38291
jmp.w __local_33
; gsym_addr t 38291 a 38086 ind 38335
__local_29:
__local_32:
__local_33:
; gsym_addr t 38291 a 38373 ind 38373
; add sp, #__removeItemFromCharacterInventory_locals
.ifgr __removeItemFromCharacterInventory_locals 0
tsa
clc
adc #__removeItemFromCharacterInventory_locals
tas
.endif
rtl
.ENDS

.SECTION ".getCharacterInventorySlottext_0x4" SUPERFREE

getCharacterInventorySlot:
; sub sp,#__getCharacterInventorySlot_locals
.ifgr __getCharacterInventorySlot_locals 0
tsa
sec
sbc #__getCharacterInventorySlot_locals
tas
.endif
; load 0
; type 17 reg 0x1f2 extra 0x76287265
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -251
lda.w #0
sep #$20
lda 3 + __getCharacterInventorySlot_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x9d
; cmpcd tcc__r0, #16
ldx #1
lda.b tcc__r0
sec
sbc.w #16
tay
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 39158 ind 39158
; gsym_addr t 0 a 39197 ind 39197
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 39287 ind 39287
; cmp op 0x95 inv 1 v 243 r 39287
; cmp ne
bne +
; gsym_addr t 0 a 39377 ind 39377
brl __local_34
+
; gtst finished; t 39287
; load 0
; type 17 reg 0xf0 extra 0x7265746e
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; gjmp_addr 0 at 39538
jmp.w __local_35
; gsym_addr t 39538 a 0 ind 39578
__local_34:
; gsym_addr t 39287 a 39612 ind 39612
; load 0
; type 17 reg 0x1f2 extra 0x76287265
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -251
lda.w #0
sep #$20
lda 3 + __getCharacterInventorySlot_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op *
; mul #20, tcc__r0
lda.w #20
sta.b tcc__r9
lda.b tcc__r0
sta.b tcc__r10
jsr.l tcc__mul
sta.b tcc__r0
; load 1
; type 36 reg 0x2f0 extra 0x0
; ld320 #playerCharacter + 20, tcc__r1 (type 0x24)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:playerCharacter
sta.b tcc__r1h
lda.w #playerCharacter + 20
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x24 c 20 r type 0x3961af80)
; length xxy 320 vtop->type 0x24
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 0 reg 0x101 extra 0x0
; ld2 [tcc__r1,0],tcc__r0
lda.b [tcc__r1]
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 20 r type 0x3961af80)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
and.w #255
sta.b tcc__r0
; gjmp_addr 39538 at 40628
jmp.w __local_36
; gsym_addr t 40628 a 39538 ind 40672
__local_35:
__local_36:
; gsym_addr t 40628 a 40710 ind 40710
; add sp, #__getCharacterInventorySlot_locals
.ifgr __getCharacterInventorySlot_locals 0
tsa
clc
adc #__getCharacterInventorySlot_locals
tas
.endif
rtl
.ENDS

.SECTION ".setPlayerCharacterPositiontext_0x5" SUPERFREE

setPlayerCharacterPosition:
; sub sp,#__setPlayerCharacterPosition_locals
.ifgr __setPlayerCharacterPosition_locals 0
tsa
sec
sbc #__setPlayerCharacterPosition_locals
tas
.endif
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -251
lda 3 + __setPlayerCharacterPosition_locals + 1,s
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x0 fc 0x10
; st2 tcc__r0, [playerCharacter,16]
lda.b tcc__r0
sta.l playerCharacter + 16
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,5],tcc__r0
; stack adjust: fc + disp - loc - 256 -249
lda 5 + __setPlayerCharacterPosition_locals + 1,s
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x0 fc 0x12
; st2 tcc__r0, [playerCharacter,18]
lda.b tcc__r0
sta.l playerCharacter + 18
; gsym_addr t 0 a 41705 ind 41705
; add sp, #__setPlayerCharacterPosition_locals
.ifgr __setPlayerCharacterPosition_locals 0
tsa
clc
adc #__setPlayerCharacterPosition_locals
tas
.endif
rtl
.ENDS

.SECTION ".getPlayerCharacterPositiontext_0x6" SUPERFREE

getPlayerCharacterPosition:
; sub sp,#__getPlayerCharacterPosition_locals
.ifgr __getPlayerCharacterPosition_locals 0
tsa
sec
sbc #__getPlayerCharacterPosition_locals
tas
.endif
; gtst inv 1 t 0 v 242 r 42137 ind 42137
; load 0
; type 4 reg 0x1f2 extra 0x4c65766f
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -251
lda 3 + __getPlayerCharacterPosition_locals + 1,s
sta.b tcc__r0
lda 5 + __getPlayerCharacterPosition_locals + 1,s
sta.b tcc__r0h
; gsym_addr t 0 a 42416 ind 42416
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 42506 ind 42506
; cmp op 0x95 inv 1 v 243 r 42506
; cmp ne
bne +
; gsym_addr t 0 a 42596 ind 42596
brl __local_37
+
; gtst finished; t 42506
; load 0
; type 4 reg 0x1f2 extra 0x4c65766f
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -251
lda 3 + __getPlayerCharacterPosition_locals + 1,s
sta.b tcc__r0
lda 5 + __getPlayerCharacterPosition_locals + 1,s
sta.b tcc__r0h
; load 1
; type 0 reg 0x3f0 extra 0x2020200a
; ld2 [playerCharacter + 16], tcc__r1
lda.l playerCharacter + 16
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x0 fc 0x3
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
__local_37:
; gsym_addr t 42506 a 43128 ind 43128
; gtst inv 1 t 0 v 242 r 43166 ind 43166
; load 0
; type 4 reg 0x1f2 extra 0x74697720
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc - 256 -247
lda 7 + __getPlayerCharacterPosition_locals + 1,s
sta.b tcc__r0
lda 9 + __getPlayerCharacterPosition_locals + 1,s
sta.b tcc__r0h
; gsym_addr t 0 a 43445 ind 43445
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 43535 ind 43535
; cmp op 0x95 inv 1 v 243 r 43535
; cmp ne
bne +
; gsym_addr t 0 a 43625 ind 43625
brl __local_38
+
; gtst finished; t 43535
; load 0
; type 4 reg 0x1f2 extra 0x74697720
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc - 256 -247
lda 7 + __getPlayerCharacterPosition_locals + 1,s
sta.b tcc__r0
lda 9 + __getPlayerCharacterPosition_locals + 1,s
sta.b tcc__r0h
; load 1
; type 0 reg 0x3f0 extra 0x705c2020
; ld2 [playerCharacter + 18], tcc__r1
lda.l playerCharacter + 18
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x0 fc 0x7
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
__local_38:
; gsym_addr t 43535 a 44157 ind 44157
; gsym_addr t 0 a 44195 ind 44195
; add sp, #__getPlayerCharacterPosition_locals
.ifgr __getPlayerCharacterPosition_locals 0
tsa
clc
adc #__getPlayerCharacterPosition_locals
tas
.endif
rtl
.ENDS

.SECTION ".levelUpPlayerCharactertext_0x7" SUPERFREE

levelUpPlayerCharacter:
; sub sp,#__levelUpPlayerCharacter_locals
.ifgr __levelUpPlayerCharacter_locals 0
tsa
sec
sbc #__levelUpPlayerCharacter_locals
tas
.endif
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [playerCharacter + 12], tcc__r0
lda.w #0
sep #$20
lda.l playerCharacter + 12
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x9d
; cmpcd tcc__r0, #99
ldx #1
lda.b tcc__r0
sec
sbc.w #99
tay
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 44889 ind 44889
; gsym_addr t 0 a 44928 ind 44928
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 45018 ind 45018
; cmp op 0x95 inv 1 v 243 r 45018
; cmp ne
bne +
; gsym_addr t 0 a 45108 ind 45108
brl __local_39
+
; gtst finished; t 45018
; load 0
; type 17 reg 0xf0 extra 0x676e6120
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; gjmp_addr 0 at 45269
jmp.w __local_40
; gsym_addr t 45269 a 0 ind 45309
__local_39:
; gsym_addr t 45018 a 45343 ind 45343
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [playerCharacter + 12], tcc__r0
lda.w #0
sep #$20
lda.l playerCharacter + 12
rep #$20
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x6d919334
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 12 r type 0x11)
; length xxy 2 vtop->type 0x0
inc.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0xc
; st1 tcc__r0, [playerCharacter,12]
sep #$20
lda.b tcc__r0
sta.l playerCharacter + 12
rep #$20
; load 0
; type 16 reg 0x3f0 extra 0x25d5000
; ld2 [playerCharacter + 8], tcc__r0
lda.l playerCharacter + 8
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x25d5000
; ld2 [playerCharacter + 10], tcc__r1
lda.l playerCharacter + 10
sta.b tcc__r1
; gen_opi len 2 op -
; sbc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x10 c 8 r type 0x10)
; length xxy 2 vtop->type 0x10
sec
lda.b tcc__r0
sbc.b tcc__r1
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x8
; st2 tcc__r0, [playerCharacter,8]
lda.b tcc__r0
sta.l playerCharacter + 8
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [playerCharacter + 12], tcc__r0
lda.w #0
sep #$20
lda.l playerCharacter + 12
rep #$20
sta.b tcc__r0
; gen_opi len 2 op *
; mul #100, tcc__r0
lda.w #100
sta.b tcc__r9
lda.b tcc__r0
sta.b tcc__r10
jsr.l tcc__mul
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0xa
; st2 tcc__r0, [playerCharacter,10]
lda.b tcc__r0
sta.l playerCharacter + 10
; load 0
; type 16 reg 0x3f0 extra 0x25d5000
; ld2 [playerCharacter + 2], tcc__r0
lda.l playerCharacter + 2
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 2 r type 0x10)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.w #10
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x2
; st2 tcc__r0, [playerCharacter,2]
lda.b tcc__r0
sta.l playerCharacter + 2
; load 0
; type 16 reg 0x3f0 extra 0x25d5000
; ld2 [playerCharacter + 6], tcc__r0
lda.l playerCharacter + 6
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 6 r type 0x10)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.w #5
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x6
; st2 tcc__r0, [playerCharacter,6]
lda.b tcc__r0
sta.l playerCharacter + 6
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [playerCharacter + 2], tcc__r0
lda.l playerCharacter + 2
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [playerCharacter,0]
lda.b tcc__r0
sta.l playerCharacter + 0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [playerCharacter + 6], tcc__r0
lda.l playerCharacter + 6
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x4
; st2 tcc__r0, [playerCharacter,4]
lda.b tcc__r0
sta.l playerCharacter + 4
; load 0
; type 17 reg 0xf0 extra 0x676e6120
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; gjmp_addr 45269 at 48165
jmp.w __local_41
; gsym_addr t 48165 a 45269 ind 48209
__local_40:
__local_41:
; gsym_addr t 48165 a 48247 ind 48247
; add sp, #__levelUpPlayerCharacter_locals
.ifgr __levelUpPlayerCharacter_locals 0
tsa
clc
adc #__levelUpPlayerCharacter_locals
tas
.endif
rtl
.ENDS

.SECTION ".healPlayerCharactertext_0x8" SUPERFREE

healPlayerCharacter:
; sub sp,#__healPlayerCharacter_locals
.ifgr __healPlayerCharacter_locals 0
tsa
sec
sbc #__healPlayerCharacter_locals
tas
.endif
; load 0
; type 16 reg 0x3f0 extra 0x25d5000
; ld2 [playerCharacter + 0], tcc__r0
lda.l playerCharacter + 0
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x25d5000
; ld2 [sp,3],tcc__r1
; stack adjust: fc + disp - loc - 256 -251
lda 3 + __healPlayerCharacter_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x10)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [playerCharacter,0]
lda.b tcc__r0
sta.l playerCharacter + 0
; load 0
; type 16 reg 0x3f0 extra 0x25d5000
; ld2 [playerCharacter + 0], tcc__r0
lda.l playerCharacter + 0
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x25d5000
; ld2 [playerCharacter + 2], tcc__r1
lda.l playerCharacter + 2
sta.b tcc__r1
; gen_opi len 2 op 0x97
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq +
bcs ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 49574 ind 49574
; gsym_addr t 0 a 49613 ind 49613
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 49703 ind 49703
; cmp op 0x95 inv 1 v 243 r 49703
; cmp ne
bne +
; gsym_addr t 0 a 49793 ind 49793
brl __local_42
+
; gtst finished; t 49703
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [playerCharacter + 2], tcc__r0
lda.l playerCharacter + 2
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [playerCharacter,0]
lda.b tcc__r0
sta.l playerCharacter + 0
__local_42:
; gsym_addr t 49703 a 50098 ind 50098
; gsym_addr t 0 a 50136 ind 50136
; add sp, #__healPlayerCharacter_locals
.ifgr __healPlayerCharacter_locals 0
tsa
clc
adc #__healPlayerCharacter_locals
tas
.endif
rtl
.ENDS

.SECTION ".restorePlayerCharacterTimeEnergytext_0x9" SUPERFREE

restorePlayerCharacterTimeEnergy:
; sub sp,#__restorePlayerCharacterTimeEnergy_locals
.ifgr __restorePlayerCharacterTimeEnergy_locals 0
tsa
sec
sbc #__restorePlayerCharacterTimeEnergy_locals
tas
.endif
; load 0
; type 16 reg 0x3f0 extra 0x25d5000
; ld2 [playerCharacter + 4], tcc__r0
lda.l playerCharacter + 4
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x25d5000
; ld2 [sp,3],tcc__r1
; stack adjust: fc + disp - loc - 256 -251
lda 3 + __restorePlayerCharacterTimeEnergy_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x10 c 4 r type 0x10)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x4
; st2 tcc__r0, [playerCharacter,4]
lda.b tcc__r0
sta.l playerCharacter + 4
; load 0
; type 16 reg 0x3f0 extra 0x25d5000
; ld2 [playerCharacter + 4], tcc__r0
lda.l playerCharacter + 4
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x25d5000
; ld2 [playerCharacter + 6], tcc__r1
lda.l playerCharacter + 6
sta.b tcc__r1
; gen_opi len 2 op 0x97
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq +
bcs ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 51528 ind 51528
; gsym_addr t 0 a 51567 ind 51567
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 51657 ind 51657
; cmp op 0x95 inv 1 v 243 r 51657
; cmp ne
bne +
; gsym_addr t 0 a 51747 ind 51747
brl __local_43
+
; gtst finished; t 51657
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [playerCharacter + 6], tcc__r0
lda.l playerCharacter + 6
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x4
; st2 tcc__r0, [playerCharacter,4]
lda.b tcc__r0
sta.l playerCharacter + 4
__local_43:
; gsym_addr t 51657 a 52052 ind 52052
; gsym_addr t 0 a 52090 ind 52090
; add sp, #__restorePlayerCharacterTimeEnergy_locals
.ifgr __restorePlayerCharacterTimeEnergy_locals 0
tsa
clc
adc #__restorePlayerCharacterTimeEnergy_locals
tas
.endif
rtl
.ENDS
.RAMSECTION "ram{WLA_FILENAME}.data" APPENDTO "globram.data"

playerCharacter dsb 344
tccs_{WLA_FILENAME}_itemNames dsb 24

.ENDS

.SECTION "{WLA_FILENAME}.data" APPENDTO "glob.data"

.db $0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0
.dw tccs_{WLA_FILENAME}_L.{WLA_FILENAME}11 + 0, :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}11
.dw tccs_{WLA_FILENAME}_L.{WLA_FILENAME}12 + 0
.dw :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}12
.dw tccs_{WLA_FILENAME}_L.{WLA_FILENAME}13 + 0
.dw :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}13
.dw tccs_{WLA_FILENAME}_L.{WLA_FILENAME}14 + 0
.dw :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}14
.dw tccs_{WLA_FILENAME}_L.{WLA_FILENAME}15 + 0
.dw :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}15
.dw tccs_{WLA_FILENAME}_L.{WLA_FILENAME}16 + 0
.dw :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}16
.ENDS

.SECTION ".rodata" SUPERFREE

tccs_{WLA_FILENAME}_L.{WLA_FILENAME}11: .db $4e,$6f,$6e,$65,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}12: .db $50,$6f,$74,$69,$6f,$6e,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}13: .db $54,$69,$6d,$65,$20,$43,$72,$79,$73,$74,$61,$6c,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}14: .db $4b,$65,$79,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}15: .db $57,$65,$61,$70,$6f,$6e,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}16: .db $41,$72,$6d,$6f,$72,$0
.ENDS

.RAMSECTION ".bss" BANK $7e SLOT 2
.ENDS
