.include "hdr.asm"
.accu 16
.index 16
.16bit
.define __initBattleSystem_locals 0
.define __initEnemyDefinitions_locals 0
.define __createEnemy_locals 36
.define __startBattle_locals 30
.define __updateBattle_locals 0
.define __endBattle_locals 0
.define __isBattleActive_locals 0
.define __setBattleAction_locals 0
.define __processBattleTurn_locals 0
.define __tccs_{WLA_FILENAME}_processPlayerAttack_locals 1
.define __tccs_{WLA_FILENAME}_processPlayerDefend_locals 0
.define __tccs_{WLA_FILENAME}_processEnemyTurn_locals 1
.define __calculateDamage_locals 0
.define __attemptEscape_locals 2
.define __applyTimeStop_locals 0
.define __applySlowMotion_locals 0
.define __rewindBattleTurn_locals 2
.define __tccs_{WLA_FILENAME}_updateTimeEffects_locals 0
.define __tccs_{WLA_FILENAME}_checkBattleEndConditions_locals 0
.define __handleBattleInput_locals 0
.define __drawBattleScreen_locals 4
.define __drawBattleUI_locals 38
.define __drawEnemySprite_locals 8
.define __updateBattleAnimations_locals 0

.SECTION ".initBattleSystemtext_0x0" SUPERFREE

initBattleSystem:
; sub sp,#__initBattleSystem_locals
.ifgr __initBattleSystem_locals 0
tsa
sec
sbc #__initBattleSystem_locals
tas
.endif
; load 0
; type 5 reg 0xf0 extra 0x1de19ec0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x5 fc 0x0
; st2 tcc__r0, [currentBattle,0]
lda.b tcc__r0
sta.l currentBattle + 0
; call r 0x2f0
jsr.l initEnemyDefinitions
; gsym_addr t 0 a 421 ind 421
; ERROR no jump found to patch
; add sp, #__initBattleSystem_locals
.ifgr __initBattleSystem_locals 0
tsa
clc
adc #__initBattleSystem_locals
tas
.endif
rtl
.ENDS

.SECTION ".initEnemyDefinitionstext_0x1" SUPERFREE

initEnemyDefinitions:
; sub sp,#__initEnemyDefinitions_locals
.ifgr __initEnemyDefinitions_locals 0
tsa
sec
sbc #__initEnemyDefinitions_locals
tas
.endif
; load 0
; type 5 reg 0xf0 extra 0x1de1c420
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x5 fc 0x0
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,0]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 0
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}20
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}20 + 0
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_enemyDefinitions
pea.w tccs_{WLA_FILENAME}_enemyDefinitions + 2
; call r 0x2f0
jsr.l strcpy
; add sp, #8
tsa
clc
adc #8
tas
; load 0
; type 16 reg 0xf0 extra 0x1de1b630
; ld2 #20,tcc__r0
lda.w #20
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x14
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,20]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 20
; load 0
; type 16 reg 0xf0 extra 0x1de1b2a0
; ld2 #8,tcc__r0
lda.w #8
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x16
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,22]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 22
; load 0
; type 16 reg 0xf0 extra 0x1de1afd0
; ld2 #2,tcc__r0
lda.w #2
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x18
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,24]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 24
; load 0
; type 16 reg 0xf0 extra 0x1de1ac90
; ld2 #10,tcc__r0
lda.w #10
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x1a
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,26]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 26
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x1c
; st1 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,28]
sep #$20
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 28
rep #$20
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x1d
; st1 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,29]
sep #$20
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 29
rep #$20
; load 0
; type 5 reg 0xf0 extra 0x1de1c420
; ld2 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x5 fc 0x1e
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,30]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 30
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}21
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}21 + 0
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_enemyDefinitions
pea.w tccs_{WLA_FILENAME}_enemyDefinitions + 32
; call r 0x2f0
jsr.l strcpy
; add sp, #8
tsa
clc
adc #8
tas
; load 0
; type 16 reg 0xf0 extra 0x1de1b630
; ld2 #35,tcc__r0
lda.w #35
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x32
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,50]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 50
; load 0
; type 16 reg 0xf0 extra 0x1de1b2a0
; ld2 #12,tcc__r0
lda.w #12
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x34
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,52]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 52
; load 0
; type 16 reg 0xf0 extra 0x1de1afd0
; ld2 #4,tcc__r0
lda.w #4
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x36
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,54]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 54
; load 0
; type 16 reg 0xf0 extra 0x1de1ac90
; ld2 #20,tcc__r0
lda.w #20
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x38
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,56]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 56
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #2,tcc__r0
lda.w #2
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x3a
; st1 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,58]
sep #$20
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 58
rep #$20
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x3b
; st1 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,59]
sep #$20
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 59
rep #$20
; load 0
; type 5 reg 0xf0 extra 0x1de1c420
; ld2 #2,tcc__r0
lda.w #2
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x5 fc 0x3c
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,60]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 60
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}22
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}22 + 0
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_enemyDefinitions
pea.w tccs_{WLA_FILENAME}_enemyDefinitions + 62
; call r 0x2f0
jsr.l strcpy
; add sp, #8
tsa
clc
adc #8
tas
; load 0
; type 16 reg 0xf0 extra 0x1de1b630
; ld2 #60,tcc__r0
lda.w #60
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x50
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,80]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 80
; load 0
; type 16 reg 0xf0 extra 0x1de1b2a0
; ld2 #18,tcc__r0
lda.w #18
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x52
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,82]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 82
; load 0
; type 16 reg 0xf0 extra 0x1de1afd0
; ld2 #8,tcc__r0
lda.w #8
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x54
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,84]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 84
; load 0
; type 16 reg 0xf0 extra 0x1de1ac90
; ld2 #35,tcc__r0
lda.w #35
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x56
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,86]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 86
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #3,tcc__r0
lda.w #3
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x58
; st1 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,88]
sep #$20
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 88
rep #$20
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #2,tcc__r0
lda.w #2
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x59
; st1 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,89]
sep #$20
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 89
rep #$20
; load 0
; type 5 reg 0xf0 extra 0x1de1c420
; ld2 #3,tcc__r0
lda.w #3
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x5 fc 0x5a
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,90]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 90
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}23
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}23 + 0
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_enemyDefinitions
pea.w tccs_{WLA_FILENAME}_enemyDefinitions + 92
; call r 0x2f0
jsr.l strcpy
; add sp, #8
tsa
clc
adc #8
tas
; load 0
; type 16 reg 0xf0 extra 0x1de1b630
; ld2 #45,tcc__r0
lda.w #45
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x6e
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,110]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 110
; load 0
; type 16 reg 0xf0 extra 0x1de1b2a0
; ld2 #15,tcc__r0
lda.w #15
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x70
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,112]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 112
; load 0
; type 16 reg 0xf0 extra 0x1de1afd0
; ld2 #6,tcc__r0
lda.w #6
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x72
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,114]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 114
; load 0
; type 16 reg 0xf0 extra 0x1de1ac90
; ld2 #25,tcc__r0
lda.w #25
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x74
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,116]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 116
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #2,tcc__r0
lda.w #2
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x76
; st1 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,118]
sep #$20
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 118
rep #$20
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #3,tcc__r0
lda.w #3
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x77
; st1 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,119]
sep #$20
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 119
rep #$20
; load 0
; type 5 reg 0xf0 extra 0x1de1c420
; ld2 #4,tcc__r0
lda.w #4
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x5 fc 0x78
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,120]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 120
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}24
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}24 + 0
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_enemyDefinitions
pea.w tccs_{WLA_FILENAME}_enemyDefinitions + 122
; call r 0x2f0
jsr.l strcpy
; add sp, #8
tsa
clc
adc #8
tas
; load 0
; type 16 reg 0xf0 extra 0x1de1b630
; ld2 #120,tcc__r0
lda.w #120
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x8c
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,140]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 140
; load 0
; type 16 reg 0xf0 extra 0x1de1b2a0
; ld2 #25,tcc__r0
lda.w #25
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x8e
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,142]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 142
; load 0
; type 16 reg 0xf0 extra 0x1de1afd0
; ld2 #15,tcc__r0
lda.w #15
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x90
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,144]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 144
; load 0
; type 16 reg 0xf0 extra 0x1de1ac90
; ld2 #80,tcc__r0
lda.w #80
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x92
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,146]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 146
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #5,tcc__r0
lda.w #5
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x94
; st1 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,148]
sep #$20
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 148
rep #$20
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #4,tcc__r0
lda.w #4
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x95
; st1 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,149]
sep #$20
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 149
rep #$20
; load 0
; type 5 reg 0xf0 extra 0x1de1c420
; ld2 #5,tcc__r0
lda.w #5
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x5 fc 0x96
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,150]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 150
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}25
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}25 + 0
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_enemyDefinitions
pea.w tccs_{WLA_FILENAME}_enemyDefinitions + 152
; call r 0x2f0
jsr.l strcpy
; add sp, #8
tsa
clc
adc #8
tas
; load 0
; type 16 reg 0xf0 extra 0x1de1b630
; ld2 #200,tcc__r0
lda.w #200
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0xaa
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,170]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 170
; load 0
; type 16 reg 0xf0 extra 0x1de1b2a0
; ld2 #35,tcc__r0
lda.w #35
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0xac
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,172]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 172
; load 0
; type 16 reg 0xf0 extra 0x1de1afd0
; ld2 #20,tcc__r0
lda.w #20
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0xae
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,174]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 174
; load 0
; type 16 reg 0xf0 extra 0x1de1ac90
; ld2 #150,tcc__r0
lda.w #150
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0xb0
; st2 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,176]
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 176
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #8,tcc__r0
lda.w #8
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0xb2
; st1 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,178]
sep #$20
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 178
rep #$20
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #5,tcc__r0
lda.w #5
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0xb3
; st1 tcc__r0, [tccs_{WLA_FILENAME}_enemyDefinitions,179]
sep #$20
lda.b tcc__r0
sta.l tccs_{WLA_FILENAME}_enemyDefinitions + 179
rep #$20
; gsym_addr t 0 a 12974 ind 12974
; ERROR no jump found to patch
; add sp, #__initEnemyDefinitions_locals
.ifgr __initEnemyDefinitions_locals 0
tsa
clc
adc #__initEnemyDefinitions_locals
tas
.endif
rtl
.ENDS

.SECTION ".createEnemytext_0x2" SUPERFREE

createEnemy:
; sub sp,#__createEnemy_locals
.ifgr __createEnemy_locals 0
tsa
sec
sbc #__createEnemy_locals
tas
.endif
; load 0
; type 0 reg 0x1f2 extra 0x1e021400
; ld2 [sp,7],tcc__r0
; stack adjust: fc + disp - loc - 256 -217
lda 7 + __createEnemy_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op *
; mul #30, tcc__r0
lda.w #30
sta.b tcc__r9
lda.b tcc__r0
sta.b tcc__r10
jsr.l tcc__mul
sta.b tcc__r0
; load 1
; type 292 reg 0x2f0 extra 0x1de05ae0
; ld180 #tccs_{WLA_FILENAME}_enemyDefinitions + 0, tcc__r1 (type 0x124)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:tccs_{WLA_FILENAME}_enemyDefinitions
sta.b tcc__r1h
lda.w #tccs_{WLA_FILENAME}_enemyDefinitions + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x124 c 0 r type 0x1de1af80)
; length xxy 180 vtop->type 0x124
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; push2 imm r 0xf0
pea.w 30
; ldpush before load type 0x4 reg 0x1
; ldpush4 (type 0x4 reg 0x1) tcc__r1
pei (tcc__r1h)
pei (tcc__r1)
; ldpush before load type 0x4 reg 0xf2
; load 0
; type 4 reg 0xf2 extra 0x4295000
; ld4 #(sp) + -30,tcc__r0 (fr 0xf2 ft 0x4 fc 0xffffffe2)
stz.b tcc__r0h
tsa
clc
adc #(-24 + __createEnemy_locals + 1)
sta.b tcc__r0
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; saveregging
; store r 0x1 fr 0x1f2 ft 0x4 fc 0xffffffdc
; st4 tcc__r1, [sp,-36]
; stack adjust: fc + disp - loc - 256 -244
lda.b tcc__r1
sta -26 + __createEnemy_locals + 1,s
lda.b tcc__r1h
sta -24 + __createEnemy_locals + 1,s
; call r 0x2f0
jsr.l memcpy
; add sp, #10
tsa
clc
adc #10
tas
; load 0
; type 4 reg 0xf2 extra 0x0
; ld4 #(sp) + -30,tcc__r0 (fr 0xf2 ft 0x4 fc 0xffffffe2)
stz.b tcc__r0h
tsa
clc
adc #(-30 + __createEnemy_locals + 1)
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c -30 r type 0x1de1af80)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #18
sta.b tcc__r0
; load 1
; type 4 reg 0xf2 extra 0x0
; ld4 #(sp) + -30,tcc__r1 (fr 0xf2 ft 0x4 fc 0xffffffe2)
stz.b tcc__r1h
tsa
clc
adc #(-30 + __createEnemy_locals + 1)
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c -30 r type 0x10)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.w #20
sta.b tcc__r1
; load 2
; type 16 reg 0x101 extra 0x1de1b980
; ld2 [tcc__r1,0],tcc__r2
lda.b [tcc__r1]
sta.b tcc__r2
; store r 0x2 fr 0x100 ft 0x10 fc 0xffffffe2
; st2 tcc__r2, [tcc__r0,0]
lda.b tcc__r2
sta.b [tcc__r0]
; load 0
; type 4 reg 0x1f2 extra 0x6c632065
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -215
lda 3 + __createEnemy_locals + 1,s
sta.b tcc__r0
lda 5 + __createEnemy_locals + 1,s
sta.b tcc__r0h
; push2 imm r 0xf0
pea.w 30
; ldpush before load type 0x4 reg 0xf2
; load 1
; type 4 reg 0xf2 extra 0x796c7069
; ld4 #(sp) + -30,tcc__r1 (fr 0xf2 ft 0x4 fc 0xffffffe2)
stz.b tcc__r1h
tsa
clc
adc #(-28 + __createEnemy_locals + 1)
sta.b tcc__r1
; ldpush4 (type 0x4 reg 0x1) tcc__r1
pei (tcc__r1h)
pei (tcc__r1)
; ldpush before load type 0x4 reg 0x0
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; call r 0x2f0
jsr.l memcpy
; add sp, #10
tsa
clc
adc #10
tas
; gjmp_addr 0 at 16345
jmp.w __local_0
; gsym_addr t 16345 a 0 ind 16384
__local_0:
; gsym_addr t 16345 a 16418 ind 16418
; add sp, #__createEnemy_locals
.ifgr __createEnemy_locals 0
tsa
clc
adc #__createEnemy_locals
tas
.endif
rtl
.ENDS

.SECTION ".startBattletext_0x3" SUPERFREE

startBattle:
; sub sp,#__startBattle_locals
.ifgr __startBattle_locals 0
tsa
sec
sbc #__startBattle_locals
tas
.endif
; load 0
; type 0 reg 0x3f0 extra 0x42a9000
; ld2 [currentBattle + 0], tcc__r0
lda.l currentBattle + 0
sta.b tcc__r0
; gen_opi len 2 op 0x95
; cmpr(n)eq tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc #0
tay
bne +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 16961 ind 16961
; gsym_addr t 0 a 17000 ind 17000
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 17090 ind 17090
; cmp op 0x95 inv 1 v 243 r 17090
; cmp ne
bne +
; gsym_addr t 0 a 17180 ind 17180
brl __local_1
+
; gtst finished; t 17090
; gjmp_addr 0 at 17255
jmp.w __local_2
; gsym_addr t 17255 a 0 ind 17294
__local_1:
; gsym_addr t 17090 a 17328 ind 17328
; load 0
; type 5 reg 0xf0 extra 0x1de19ec0
; ld2 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x5 fc 0x0
; st2 tcc__r0, [currentBattle,0]
lda.b tcc__r0
sta.l currentBattle + 0
; ldpush before load type 0x5 reg 0x1f2
; load 0
; type 5 reg 0x1f2 extra 0x7367616c
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -221
lda 3 + __startBattle_locals + 1,s
sta.b tcc__r0
; ldpush2 (type 0x5 reg 0x0) tcc__r0
pei (tcc__r0)
; ldpush before load type 0x4 reg 0xf2
; load 0
; type 4 reg 0xf2 extra 0x0
; ld4 #(sp) + -30,tcc__r0 (fr 0xf2 ft 0x4 fc 0xffffffe2)
stz.b tcc__r0h
tsa
clc
adc #(-28 + __startBattle_locals + 1)
sta.b tcc__r0
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; call r 0x2f0
jsr.l createEnemy
; add sp, #6
tsa
clc
adc #6
tas
; push2 imm r 0xf0
pea.w 30
; ldpush before load type 0x4 reg 0xf2
; load 0
; type 4 reg 0xf2 extra 0x1de19c00
; ld4 #(sp) + -30,tcc__r0 (fr 0xf2 ft 0x4 fc 0xffffffe2)
stz.b tcc__r0h
tsa
clc
adc #(-28 + __startBattle_locals + 1)
sta.b tcc__r0
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; push4 imm r 0x2f0
pea.w :currentBattle
pea.w currentBattle + 2
; call r 0x2f0
jsr.l memcpy
; add sp, #10
tsa
clc
adc #10
tas
; load 0
; type 16 reg 0xf0 extra 0x1de19950
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x20
; st2 tcc__r0, [currentBattle,32]
lda.b tcc__r0
sta.l currentBattle + 32
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x22
; st1 tcc__r0, [currentBattle,34]
sep #$20
lda.b tcc__r0
sta.l currentBattle + 34
rep #$20
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x24
; st1 tcc__r0, [currentBattle,36]
sep #$20
lda.b tcc__r0
sta.l currentBattle + 36
rep #$20
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x25
; st1 tcc__r0, [currentBattle,37]
sep #$20
lda.b tcc__r0
sta.l currentBattle + 37
rep #$20
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x26
; st1 tcc__r0, [currentBattle,38]
sep #$20
lda.b tcc__r0
sta.l currentBattle + 38
rep #$20
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x23
; st1 tcc__r0, [currentBattle,35]
sep #$20
lda.b tcc__r0
sta.l currentBattle + 35
rep #$20
__local_2:
; gsym_addr t 17255 a 19824 ind 19824
; add sp, #__startBattle_locals
.ifgr __startBattle_locals 0
tsa
clc
adc #__startBattle_locals
tas
.endif
rtl
.ENDS

.SECTION ".updateBattletext_0x4" SUPERFREE

updateBattle:
; sub sp,#__updateBattle_locals
.ifgr __updateBattle_locals 0
tsa
sec
sbc #__updateBattle_locals
tas
.endif
; load 0
; type 5 reg 0x3f0 extra 0x1de19ec0
; ld2 [currentBattle + 0], tcc__r0
lda.l currentBattle + 0
sta.b tcc__r0
; gjmp_addr 0 at 20263
jmp.w __local_3
; gsym_addr t 20263 a 0 ind 20302
; gjmp_addr 0 at 20336
jmp.w __local_4
; gsym_addr t 20336 a 0 ind 20375
__local_3:
; gsym_addr t 20263 a 20409 ind 20409
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc #0
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 20557 ind 20557
; gsym_addr t 0 a 20596 ind 20596
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 20686 ind 20686
; cmp op 0x95 inv 1 v 243 r 20686
; cmp ne
bne +
; gsym_addr t 0 a 20776 ind 20776
brl __local_5
+
; gtst finished; t 20686
__local_4:
; gsym_addr t 20336 a 20851 ind 20851
; gjmp_addr 0 at 20889
jmp.w __local_6
; gsym_addr t 20889 a 0 ind 20928
; gjmp_addr 0 at 20962
jmp.w __local_7
; gsym_addr t 20962 a 0 ind 21001
__local_5:
; gsym_addr t 20686 a 21035 ind 21035
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #1
ldx #1
lda.b tcc__r0
sec
sbc #1
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 21183 ind 21183
; gsym_addr t 0 a 21222 ind 21222
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 21312 ind 21312
; cmp op 0x95 inv 1 v 243 r 21312
; cmp ne
bne +
; gsym_addr t 0 a 21402 ind 21402
brl __local_8
+
; gtst finished; t 21312
__local_7:
; gsym_addr t 20962 a 21477 ind 21477
; load 0
; type 5 reg 0xf0 extra 0x1de19ec0
; ld2 #2,tcc__r0
lda.w #2
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x5 fc 0x0
; st2 tcc__r0, [currentBattle,0]
lda.b tcc__r0
sta.l currentBattle + 0
; gjmp_addr 20889 at 21707
jmp.w __local_9
; gsym_addr t 21707 a 20889 ind 21750
; gjmp_addr 0 at 21788
jmp.w __local_10
; gsym_addr t 21788 a 0 ind 21828
__local_8:
; gsym_addr t 21312 a 21862 ind 21862
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #2
ldx #1
lda.b tcc__r0
sec
sbc #2
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 22010 ind 22010
; gsym_addr t 0 a 22049 ind 22049
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 22139 ind 22139
; cmp op 0x95 inv 1 v 243 r 22139
; cmp ne
bne +
; gsym_addr t 0 a 22229 ind 22229
brl __local_11
+
; gtst finished; t 22139
__local_10:
; gsym_addr t 21788 a 22305 ind 22305
; gtst inv 1 t 0 v 240 r 22343 ind 22343
; load 0
; type 17 reg 0x53f0 extra 0x1de183e0
; ld1 [currentBattle + 36], tcc__r0
lda.w #0
sep #$20
lda.l currentBattle + 36
rep #$20
sta.b tcc__r0
; gsym_addr t 0 a 22533 ind 22533
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 22623 ind 22623
; cmp op 0x95 inv 1 v 243 r 22623
; cmp ne
bne +
; gsym_addr t 0 a 22713 ind 22713
brl __local_12
+
; gtst finished; t 22623
; gjmp_addr 0 at 22789
jmp.w __local_13
; gsym_addr t 22789 a 0 ind 22829
__local_12:
; gsym_addr t 22623 a 22863 ind 22863
; call r 0x2f0
jsr.l tccs_{WLA_FILENAME}_processEnemyTurn
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x24
; st1 tcc__r0, [currentBattle,36]
sep #$20
lda.b tcc__r0
sta.l currentBattle + 36
rep #$20
__local_13:
; gsym_addr t 22789 a 23168 ind 23168
; call r 0x2f0
jsr.l tccs_{WLA_FILENAME}_updateTimeEffects
; gjmp_addr 21707 at 23265
jmp.w __local_14
; gsym_addr t 23265 a 21707 ind 23309
; gjmp_addr 0 at 23347
jmp.w __local_15
; gsym_addr t 23347 a 0 ind 23387
__local_11:
; gsym_addr t 22139 a 23421 ind 23421
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #3
ldx #1
lda.b tcc__r0
sec
sbc #3
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 23569 ind 23569
; gsym_addr t 0 a 23608 ind 23608
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 23698 ind 23698
; cmp op 0x95 inv 1 v 243 r 23698
; cmp ne
bne +
; gsym_addr t 0 a 23788 ind 23788
brl __local_16
+
; gtst finished; t 23698
__local_15:
; gsym_addr t 23347 a 23864 ind 23864
; gjmp_addr 0 at 23902
jmp.w __local_17
; gsym_addr t 23902 a 0 ind 23942
__local_16:
; gsym_addr t 23698 a 23976 ind 23976
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #4
ldx #1
lda.b tcc__r0
sec
sbc #4
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 24124 ind 24124
; gsym_addr t 0 a 24163 ind 24163
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 24253 ind 24253
; cmp op 0x95 inv 1 v 243 r 24253
; cmp ne
bne +
; gsym_addr t 0 a 24343 ind 24343
brl __local_18
+
; gtst finished; t 24253
__local_17:
; gsym_addr t 23902 a 24419 ind 24419
; gjmp_addr 0 at 24457
jmp.w __local_19
; gsym_addr t 24457 a 0 ind 24497
__local_18:
; gsym_addr t 24253 a 24531 ind 24531
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #5
ldx #1
lda.b tcc__r0
sec
sbc #5
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 24679 ind 24679
; gsym_addr t 0 a 24718 ind 24718
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 24808 ind 24808
; cmp op 0x95 inv 1 v 243 r 24808
; cmp ne
bne +
; gsym_addr t 0 a 24898 ind 24898
brl __local_20
+
; gtst finished; t 24808
__local_19:
; gsym_addr t 24457 a 24974 ind 24974
; gjmp_addr 23265 at 25012
jmp.w __local_21
; gsym_addr t 25012 a 23265 ind 25056
__local_20:
; gsym_addr t 24808 a 25094 ind 25094
__local_6:
__local_9:
__local_14:
__local_21:
; gsym_addr t 25012 a 25132 ind 25132
; gsym_addr t 0 a 25170 ind 25170
; add sp, #__updateBattle_locals
.ifgr __updateBattle_locals 0
tsa
clc
adc #__updateBattle_locals
tas
.endif
rtl
.ENDS

.SECTION ".endBattletext_0x5" SUPERFREE

endBattle:
; sub sp,#__endBattle_locals
.ifgr __endBattle_locals 0
tsa
sec
sbc #__endBattle_locals
tas
.endif
; load 0
; type 5 reg 0xf0 extra 0x1de19ec0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x5 fc 0x0
; st2 tcc__r0, [currentBattle,0]
lda.b tcc__r0
sta.l currentBattle + 0
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x25
; st1 tcc__r0, [currentBattle,37]
sep #$20
lda.b tcc__r0
sta.l currentBattle + 37
rep #$20
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x26
; st1 tcc__r0, [currentBattle,38]
sep #$20
lda.b tcc__r0
sta.l currentBattle + 38
rep #$20
; gsym_addr t 0 a 26085 ind 26085
; add sp, #__endBattle_locals
.ifgr __endBattle_locals 0
tsa
clc
adc #__endBattle_locals
tas
.endif
rtl
.ENDS

.SECTION ".isBattleActivetext_0x6" SUPERFREE

isBattleActive:
; sub sp,#__isBattleActive_locals
.ifgr __isBattleActive_locals 0
tsa
sec
sbc #__isBattleActive_locals
tas
.endif
; load 0
; type 0 reg 0x3f0 extra 0x42a9000
; ld2 [currentBattle + 0], tcc__r0
lda.l currentBattle + 0
sta.b tcc__r0
; gen_opi len 2 op 0x95
; cmpr(n)eq tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc #0
tay
bne +
dex
+
stx.b tcc__r5
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r5 (0x5) (fr type 0x0 c 0 r type 0x1de1af80)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r5
and.w #255
sta.b tcc__r5
; load 0
; type 17 reg 0x5 extra 0x204d5950
; mov tcc__r5, tcc__r0
lda.b tcc__r5
sta.b tcc__r0
lda.b tcc__r5h
sta.b tcc__r0h
; gjmp_addr 0 at 26928
jmp.w __local_22
; gsym_addr t 26928 a 0 ind 26968
__local_22:
; gsym_addr t 26928 a 27002 ind 27002
; add sp, #__isBattleActive_locals
.ifgr __isBattleActive_locals 0
tsa
clc
adc #__isBattleActive_locals
tas
.endif
rtl
.ENDS

.SECTION ".setBattleActiontext_0x7" SUPERFREE

setBattleAction:
; sub sp,#__setBattleAction_locals
.ifgr __setBattleAction_locals 0
tsa
sec
sbc #__setBattleAction_locals
tas
.endif
; load 0
; type 0 reg 0x3f0 extra 0x42a9000
; ld2 [currentBattle + 0], tcc__r0
lda.l currentBattle + 0
sta.b tcc__r0
; gen_opi len 2 op 0x95
; cmpr(n)eq tcc__r0, #2
ldx #1
lda.b tcc__r0
sec
sbc #2
tay
bne +
dex
+
stx.b tcc__r5
; gtst inv 0 t 0 v 5 r 27574 ind 27574
; gsym_addr t 0 a 27613 ind 27613
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 0 t 0 v 243 r 27703 ind 27703
; cmp op 0x95 inv 0 v 243 r 27703
; cmp ne
beq +
; gsym_addr t 0 a 27793 ind 27793
brl __local_23
+
; gtst finished; t 27703
; gtst inv 1 t 0 v 240 r 27869 ind 27869
; load 0
; type 17 reg 0x53f0 extra 0x1de183e0
; ld1 [currentBattle + 36], tcc__r0
lda.w #0
sep #$20
lda.l currentBattle + 36
rep #$20
sta.b tcc__r0
; gsym_addr t 0 a 28059 ind 28059
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 28149 ind 28149
; cmp op 0x95 inv 1 v 243 r 28149
; cmp ne
bne +
; gsym_addr t 0 a 28239 ind 28239
brl __local_24
+
; gtst finished; t 28149
; gtst inv 0 t 27703 v 244 r 28315 ind 28315
; VT_jmp r 28315 t 27703 ji 0 inv 0 vtop->c.i 28149
__local_23:
; gsym_addr t 27703 a 28412 ind 28412
; gtst finished; t 28149
; gtst inv 1 t 0 v 244 r 28475 ind 28475
; VT_jmp r 28475 t 0 ji 0 inv 1 vtop->c.i 28149
; gjmp_addr 0 at 28564
jmp.w __local_25
; gsym_addr t 28564 a 0 ind 28604
__local_24:
; gsym_addr t 28149 a 28638 ind 28638
; gtst finished; t 28564
; gjmp_addr 0 at 28701
jmp.w __local_26
; gsym_addr t 28701 a 0 ind 28741
__local_25:
; gsym_addr t 28564 a 28775 ind 28775
; load 0
; type 17 reg 0x1f2 extra 0x1de19270
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -251
lda.w #0
sep #$20
lda 3 + __setBattleAction_locals + 1,s
rep #$20
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x22
; st1 tcc__r0, [currentBattle,34]
sep #$20
lda.b tcc__r0
sta.l currentBattle + 34
rep #$20
__local_26:
; gsym_addr t 28701 a 29134 ind 29134
; add sp, #__setBattleAction_locals
.ifgr __setBattleAction_locals 0
tsa
clc
adc #__setBattleAction_locals
tas
.endif
rtl
.ENDS

.SECTION ".processBattleTurntext_0x8" SUPERFREE

processBattleTurn:
; sub sp,#__processBattleTurn_locals
.ifgr __processBattleTurn_locals 0
tsa
sec
sbc #__processBattleTurn_locals
tas
.endif
; load 0
; type 0 reg 0x3f0 extra 0x42a9000
; ld2 [currentBattle + 0], tcc__r0
lda.l currentBattle + 0
sta.b tcc__r0
; gen_opi len 2 op 0x95
; cmpr(n)eq tcc__r0, #2
ldx #1
lda.b tcc__r0
sec
sbc #2
tay
bne +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 29719 ind 29719
; gsym_addr t 0 a 29758 ind 29758
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 29848 ind 29848
; cmp op 0x95 inv 1 v 243 r 29848
; cmp ne
bne +
; gsym_addr t 0 a 29938 ind 29938
brl __local_27
+
; gtst finished; t 29848
; gjmp_addr 0 at 30014
jmp.w __local_28
; gsym_addr t 30014 a 0 ind 30054
__local_27:
; gsym_addr t 29848 a 30088 ind 30088
; load 0
; type 16 reg 0x3f0 extra 0x1de19950
; ld2 [currentBattle + 32], tcc__r0
lda.l currentBattle + 32
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x6bc45304
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 32 r type 0x10)
; length xxy 2 vtop->type 0x10
inc.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x20
; st2 tcc__r0, [currentBattle,32]
lda.b tcc__r0
sta.l currentBattle + 32
; load 0
; type 17 reg 0x53f0 extra 0x1de19270
; ld1 [currentBattle + 34], tcc__r0
lda.w #0
sep #$20
lda.l currentBattle + 34
rep #$20
sta.b tcc__r0
; gjmp_addr 0 at 30768
jmp.w __local_29
; gsym_addr t 30768 a 0 ind 30808
; gjmp_addr 0 at 30842
jmp.w __local_30
; gsym_addr t 30842 a 0 ind 30882
__local_29:
; gsym_addr t 30768 a 30916 ind 30916
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc #0
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 31064 ind 31064
; gsym_addr t 0 a 31103 ind 31103
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 31193 ind 31193
; cmp op 0x95 inv 1 v 243 r 31193
; cmp ne
bne +
; gsym_addr t 0 a 31283 ind 31283
brl __local_31
+
; gtst finished; t 31193
__local_30:
; gsym_addr t 30842 a 31359 ind 31359
; call r 0x2f0
jsr.l tccs_{WLA_FILENAME}_processPlayerAttack
; gjmp_addr 0 at 31458
jmp.w __local_32
; gsym_addr t 31458 a 0 ind 31498
; gjmp_addr 0 at 31532
jmp.w __local_33
; gsym_addr t 31532 a 0 ind 31572
__local_31:
; gsym_addr t 31193 a 31606 ind 31606
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #1
ldx #1
lda.b tcc__r0
sec
sbc #1
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 31754 ind 31754
; gsym_addr t 0 a 31793 ind 31793
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 31883 ind 31883
; cmp op 0x95 inv 1 v 243 r 31883
; cmp ne
bne +
; gsym_addr t 0 a 31973 ind 31973
brl __local_34
+
; gtst finished; t 31883
__local_33:
; gsym_addr t 31532 a 32049 ind 32049
; call r 0x2f0
jsr.l tccs_{WLA_FILENAME}_processPlayerDefend
; gjmp_addr 31458 at 32148
jmp.w __local_35
; gsym_addr t 32148 a 31458 ind 32192
; gjmp_addr 0 at 32230
jmp.w __local_36
; gsym_addr t 32230 a 0 ind 32270
__local_34:
; gsym_addr t 31883 a 32304 ind 32304
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #2
ldx #1
lda.b tcc__r0
sec
sbc #2
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 32452 ind 32452
; gsym_addr t 0 a 32491 ind 32491
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 32581 ind 32581
; cmp op 0x95 inv 1 v 243 r 32581
; cmp ne
bne +
; gsym_addr t 0 a 32671 ind 32671
brl __local_37
+
; gtst finished; t 32581
__local_36:
; gsym_addr t 32230 a 32747 ind 32747
; call r 0x2f0
jsr.l applyTimeStop
; gjmp_addr 32148 at 32820
jmp.w __local_38
; gsym_addr t 32820 a 32148 ind 32864
; gjmp_addr 0 at 32902
jmp.w __local_39
; gsym_addr t 32902 a 0 ind 32942
__local_37:
; gsym_addr t 32581 a 32976 ind 32976
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #3
ldx #1
lda.b tcc__r0
sec
sbc #3
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 33124 ind 33124
; gsym_addr t 0 a 33163 ind 33163
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 33253 ind 33253
; cmp op 0x95 inv 1 v 243 r 33253
; cmp ne
bne +
; gsym_addr t 0 a 33343 ind 33343
brl __local_40
+
; gtst finished; t 33253
__local_39:
; gsym_addr t 32902 a 33419 ind 33419
; call r 0x2f0
jsr.l applySlowMotion
; gjmp_addr 32820 at 33494
jmp.w __local_41
; gsym_addr t 33494 a 32820 ind 33538
; gjmp_addr 0 at 33576
jmp.w __local_42
; gsym_addr t 33576 a 0 ind 33616
__local_40:
; gsym_addr t 33253 a 33650 ind 33650
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #4
ldx #1
lda.b tcc__r0
sec
sbc #4
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 33798 ind 33798
; gsym_addr t 0 a 33837 ind 33837
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 33927 ind 33927
; cmp op 0x95 inv 1 v 243 r 33927
; cmp ne
bne +
; gsym_addr t 0 a 34017 ind 34017
brl __local_43
+
; gtst finished; t 33927
__local_42:
; gsym_addr t 33576 a 34093 ind 34093
; call r 0x2f0
jsr.l rewindBattleTurn
; gjmp_addr 33494 at 34169
jmp.w __local_44
; gsym_addr t 34169 a 33494 ind 34213
; gjmp_addr 0 at 34251
jmp.w __local_45
; gsym_addr t 34251 a 0 ind 34291
__local_43:
; gsym_addr t 33927 a 34325 ind 34325
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #5
ldx #1
lda.b tcc__r0
sec
sbc #5
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 34473 ind 34473
; gsym_addr t 0 a 34512 ind 34512
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 34602 ind 34602
; cmp op 0x95 inv 1 v 243 r 34602
; cmp ne
bne +
; gsym_addr t 0 a 34692 ind 34692
brl __local_46
+
; gtst finished; t 34602
__local_45:
; gsym_addr t 34251 a 34768 ind 34768
; call r 0x2f0
jsr.l attemptEscape
; gtst inv 1 t 0 v 0 r 34841 ind 34841
; gsym_addr t 0 a 34880 ind 34880
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 34970 ind 34970
; cmp op 0x95 inv 1 v 243 r 34970
; cmp ne
bne +
; gsym_addr t 0 a 35060 ind 35060
brl __local_47
+
; gtst finished; t 34970
; load 0
; type 5 reg 0xf0 extra 0x1de19ec0
; ld2 #5,tcc__r0
lda.w #5
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x5 fc 0x0
; st2 tcc__r0, [currentBattle,0]
lda.b tcc__r0
sta.l currentBattle + 0
; gjmp_addr 0 at 35328
jmp.w __local_48
; gsym_addr t 35328 a 0 ind 35368
__local_47:
; gsym_addr t 34970 a 35402 ind 35402
; call r 0x2f0
jsr.l tccs_{WLA_FILENAME}_processEnemyTurn
__local_48:
; gsym_addr t 35328 a 35498 ind 35498
; gjmp_addr 34169 at 35536
jmp.w __local_49
; gsym_addr t 35536 a 34169 ind 35580
__local_46:
; gsym_addr t 34602 a 35618 ind 35618
__local_32:
__local_35:
__local_38:
__local_41:
__local_44:
__local_49:
; gsym_addr t 35536 a 35656 ind 35656
; call r 0x2f0
jsr.l tccs_{WLA_FILENAME}_checkBattleEndConditions
; gtst inv 1 t 0 v 240 r 35760 ind 35760
; load 0
; type 17 reg 0x53f0 extra 0x1de183e0
; ld1 [currentBattle + 36], tcc__r0
lda.w #0
sep #$20
lda.l currentBattle + 36
rep #$20
sta.b tcc__r0
; gsym_addr t 0 a 35950 ind 35950
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 36040 ind 36040
; cmp op 0x95 inv 1 v 243 r 36040
; cmp ne
bne +
; gsym_addr t 0 a 36130 ind 36130
brl __local_50
+
; gtst finished; t 36040
; load 0
; type 17 reg 0xf4 extra 0x1de183e0
; jmpr(i) v 0xf4 r 0x0 fc 0x8cc8
lda #0
bra +
__local_50:
; gsym_addr t 36040 a 36297 ind 36297
lda #1
+
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x24
; st1 tcc__r0, [currentBattle,36]
sep #$20
lda.b tcc__r0
sta.l currentBattle + 36
rep #$20
__local_28:
; gsym_addr t 30014 a 36489 ind 36489
; add sp, #__processBattleTurn_locals
.ifgr __processBattleTurn_locals 0
tsa
clc
adc #__processBattleTurn_locals
tas
.endif
rtl
.ENDS

.SECTION ".tccs_{WLA_FILENAME}_processPlayerAttacktext_0x9" SUPERFREE

tccs_{WLA_FILENAME}_processPlayerAttack:
; sub sp,#__tccs_{WLA_FILENAME}_processPlayerAttack_locals
.ifgr __tccs_{WLA_FILENAME}_processPlayerAttack_locals 0
tsa
sec
sbc #__tccs_{WLA_FILENAME}_processPlayerAttack_locals
tas
.endif
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [playerCharacter + 13], tcc__r0
lda.w #0
sep #$20
lda.l playerCharacter + 13
rep #$20
sta.b tcc__r0
; ldpush before load type 0x10 reg 0x3f0
; load 1
; type 16 reg 0x3f0 extra 0x1de0b520
; ld2 [currentBattle + 26], tcc__r1
lda.l currentBattle + 26
sta.b tcc__r1
; ldpush2 (type 0x10 reg 0x1) tcc__r1
pei (tcc__r1)
; ldpush before load type 0x10 reg 0x0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l calculateDamage
; add sp, #4
tsa
clc
adc #4
tas
; store r 0x0 fr 0x1f2 ft 0x11 fc 0xffffffff
; st1 tcc__r0, [sp,-1]
; stack adjust: fc + disp - loc - 256 -254
sep #$20
lda.b tcc__r0
sta -1 + __tccs_{WLA_FILENAME}_processPlayerAttack_locals + 1,s
rep #$20
; load 0
; type 17 reg 0x51f2 extra 0x6e696472
; ld1 [sp,-1],tcc__r0
; stack adjust: fc + disp - loc - 256 -254
lda.w #0
sep #$20
lda -1 + __tccs_{WLA_FILENAME}_processPlayerAttack_locals + 1,s
rep #$20
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x42a9000
; ld2 [currentBattle + 20], tcc__r1
lda.l currentBattle + 20
sta.b tcc__r1
; gen_opi len 2 op 0x97
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq +
bcs ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 38156 ind 38156
; gsym_addr t 0 a 38195 ind 38195
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 38285 ind 38285
; cmp op 0x95 inv 1 v 243 r 38285
; cmp ne
bne +
; gsym_addr t 0 a 38375 ind 38375
brl __local_51
+
; gtst finished; t 38285
; load 0
; type 16 reg 0xf0 extra 0x1de1b980
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x14
; st2 tcc__r0, [currentBattle,20]
lda.b tcc__r0
sta.l currentBattle + 20
; gjmp_addr 0 at 38648
jmp.w __local_52
; gsym_addr t 38648 a 0 ind 38688
__local_51:
; gsym_addr t 38285 a 38722 ind 38722
; load 0
; type 17 reg 0x51f2 extra 0x6e696472
; ld1 [sp,-1],tcc__r0
; stack adjust: fc + disp - loc - 256 -254
lda.w #0
sep #$20
lda -1 + __tccs_{WLA_FILENAME}_processPlayerAttack_locals + 1,s
rep #$20
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x42a9000
; ld2 [currentBattle + 20], tcc__r1
lda.l currentBattle + 20
sta.b tcc__r1
; gen_opi len 2 op -
; sbc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x10 c 20 r type 0x10)
; length xxy 2 vtop->type 0x10
sec
lda.b tcc__r1
sbc.b tcc__r0
sta.b tcc__r1
; store r 0x1 fr 0x3f0 ft 0x10 fc 0x14
; st2 tcc__r1, [currentBattle,20]
lda.b tcc__r1
sta.l currentBattle + 20
__local_52:
; gsym_addr t 38648 a 39374 ind 39374
; gsym_addr t 0 a 39412 ind 39412
; add sp, #__tccs_{WLA_FILENAME}_processPlayerAttack_locals
.ifgr __tccs_{WLA_FILENAME}_processPlayerAttack_locals 0
tsa
clc
adc #__tccs_{WLA_FILENAME}_processPlayerAttack_locals
tas
.endif
rtl
.ENDS

.SECTION ".tccs_{WLA_FILENAME}_processPlayerDefendtext_0xa" SUPERFREE

tccs_{WLA_FILENAME}_processPlayerDefend:
; sub sp,#__tccs_{WLA_FILENAME}_processPlayerDefend_locals
.ifgr __tccs_{WLA_FILENAME}_processPlayerDefend_locals 0
tsa
sec
sbc #__tccs_{WLA_FILENAME}_processPlayerDefend_locals
tas
.endif
; gsym_addr t 0 a 39948 ind 39948
; add sp, #__tccs_{WLA_FILENAME}_processPlayerDefend_locals
.ifgr __tccs_{WLA_FILENAME}_processPlayerDefend_locals 0
tsa
clc
adc #__tccs_{WLA_FILENAME}_processPlayerDefend_locals
tas
.endif
rtl
.ENDS

.SECTION ".tccs_{WLA_FILENAME}_processEnemyTurntext_0xb" SUPERFREE

tccs_{WLA_FILENAME}_processEnemyTurn:
; sub sp,#__tccs_{WLA_FILENAME}_processEnemyTurn_locals
.ifgr __tccs_{WLA_FILENAME}_processEnemyTurn_locals 0
tsa
sec
sbc #__tccs_{WLA_FILENAME}_processEnemyTurn_locals
tas
.endif
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [playerCharacter + 14], tcc__r0
lda.w #0
sep #$20
lda.l playerCharacter + 14
rep #$20
sta.b tcc__r0
; ldpush before load type 0x10 reg 0x0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; ldpush before load type 0x10 reg 0x3f0
; load 0
; type 16 reg 0x3f0 extra 0x1de0b780
; ld2 [currentBattle + 24], tcc__r0
lda.l currentBattle + 24
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l calculateDamage
; add sp, #4
tsa
clc
adc #4
tas
; store r 0x0 fr 0x1f2 ft 0x11 fc 0xffffffff
; st1 tcc__r0, [sp,-1]
; stack adjust: fc + disp - loc - 256 -254
sep #$20
lda.b tcc__r0
sta -1 + __tccs_{WLA_FILENAME}_processEnemyTurn_locals + 1,s
rep #$20
; load 0
; type 17 reg 0x51f2 extra 0x7265746e
; ld1 [sp,-1],tcc__r0
; stack adjust: fc + disp - loc - 256 -254
lda.w #0
sep #$20
lda -1 + __tccs_{WLA_FILENAME}_processEnemyTurn_locals + 1,s
rep #$20
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x42a9000
; ld2 [playerCharacter + 0], tcc__r1
lda.l playerCharacter + 0
sta.b tcc__r1
; gen_opi len 2 op 0x97
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq +
bcs ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 41658 ind 41658
; gsym_addr t 0 a 41697 ind 41697
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 41787 ind 41787
; cmp op 0x95 inv 1 v 243 r 41787
; cmp ne
bne +
; gsym_addr t 0 a 41877 ind 41877
brl __local_53
+
; gtst finished; t 41787
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [playerCharacter,0]
lda.b tcc__r0
sta.l playerCharacter + 0
; gjmp_addr 0 at 42144
jmp.w __local_54
; gsym_addr t 42144 a 0 ind 42184
__local_53:
; gsym_addr t 41787 a 42218 ind 42218
; load 0
; type 17 reg 0x51f2 extra 0x7265746e
; ld1 [sp,-1],tcc__r0
; stack adjust: fc + disp - loc - 256 -254
lda.w #0
sep #$20
lda -1 + __tccs_{WLA_FILENAME}_processEnemyTurn_locals + 1,s
rep #$20
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x42a9000
; ld2 [playerCharacter + 0], tcc__r1
lda.l playerCharacter + 0
sta.b tcc__r1
; gen_opi len 2 op -
; sbc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x10 c 0 r type 0x10)
; length xxy 2 vtop->type 0x10
sec
lda.b tcc__r1
sbc.b tcc__r0
sta.b tcc__r1
; store r 0x1 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r1, [playerCharacter,0]
lda.b tcc__r1
sta.l playerCharacter + 0
__local_54:
; gsym_addr t 42144 a 42869 ind 42869
; gsym_addr t 0 a 42907 ind 42907
; add sp, #__tccs_{WLA_FILENAME}_processEnemyTurn_locals
.ifgr __tccs_{WLA_FILENAME}_processEnemyTurn_locals 0
tsa
clc
adc #__tccs_{WLA_FILENAME}_processEnemyTurn_locals
tas
.endif
rtl
.ENDS

.SECTION ".calculateDamagetext_0xc" SUPERFREE

calculateDamage:
; sub sp,#__calculateDamage_locals
.ifgr __calculateDamage_locals 0
tsa
sec
sbc #__calculateDamage_locals
tas
.endif
; load 0
; type 16 reg 0x1f2 extra 0x42a9000
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -251
lda 3 + __calculateDamage_locals + 1,s
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x42a9000
; ld2 [sp,5],tcc__r1
; stack adjust: fc + disp - loc - 256 -249
lda 5 + __calculateDamage_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x96
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq ++
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 43768 ind 43768
; gsym_addr t 0 a 43807 ind 43807
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 43897 ind 43897
; cmp op 0x95 inv 1 v 243 r 43897
; cmp ne
bne +
; gsym_addr t 0 a 43987 ind 43987
brl __local_55
+
; gtst finished; t 43897
; load 0
; type 17 reg 0xf0 extra 0x2c474220
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; gjmp_addr 0 at 44148
jmp.w __local_56
; gsym_addr t 44148 a 0 ind 44188
__local_55:
; gsym_addr t 43897 a 44222 ind 44222
; load 0
; type 16 reg 0x1f2 extra 0x42a9000
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -251
lda 3 + __calculateDamage_locals + 1,s
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x42a9000
; ld2 [sp,5],tcc__r1
; stack adjust: fc + disp - loc - 256 -249
lda 5 + __calculateDamage_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op -
; sbc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x10 c 3 r type 0x1de1af80)
; length xxy 2 vtop->type 0x10
sec
lda.b tcc__r0
sbc.b tcc__r1
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 3 r type 0x1de1af80)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #255
sta.b tcc__r0
; gjmp_addr 44148 at 44926
jmp.w __local_57
; gsym_addr t 44926 a 44148 ind 44970
__local_56:
__local_57:
; gsym_addr t 44926 a 45008 ind 45008
; add sp, #__calculateDamage_locals
.ifgr __calculateDamage_locals 0
tsa
clc
adc #__calculateDamage_locals
tas
.endif
rtl
.ENDS

.SECTION ".attemptEscapetext_0xd" SUPERFREE

attemptEscape:
; sub sp,#__attemptEscape_locals
.ifgr __attemptEscape_locals 0
tsa
sec
sbc #__attemptEscape_locals
tas
.endif
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #30,tcc__r0
lda.w #30
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x11 fc 0xffffffff
; st1 tcc__r0, [sp,-1]
; stack adjust: fc + disp - loc - 256 -254
sep #$20
lda.b tcc__r0
sta -1 + __attemptEscape_locals + 1,s
rep #$20
; call r 0x2f0
jsr.l rand
; gen_opi len 2 op 0xb1
; div #100, tcc__r0
ldx.b tcc__r0
lda.w #100
jsr.l tcc__udiv
stx.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x11 fc 0xfffffffe
; st1 tcc__r0, [sp,-2]
; stack adjust: fc + disp - loc - 256 -254
sep #$20
lda.b tcc__r0
sta -2 + __attemptEscape_locals + 1,s
rep #$20
; load 0
; type 17 reg 0x51f2 extra 0x2064696f
; ld1 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc - 256 -254
lda.w #0
sep #$20
lda -2 + __attemptEscape_locals + 1,s
rep #$20
sta.b tcc__r0
; load 1
; type 17 reg 0x51f2 extra 0x2020200a
; ld1 [sp,-1],tcc__r1
; stack adjust: fc + disp - loc - 256 -253
lda.w #0
sep #$20
lda -1 + __attemptEscape_locals + 1,s
rep #$20
sta.b tcc__r1
; gen_opi len 2 op 0x9c
; cmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r5 (0x5) (fr type 0x0 c -2 r type 0x1de1af80)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r5
and.w #255
sta.b tcc__r5
; load 0
; type 17 reg 0x5 extra 0x76287265
; mov tcc__r5, tcc__r0
lda.b tcc__r5
sta.b tcc__r0
lda.b tcc__r5h
sta.b tcc__r0h
; gjmp_addr 0 at 46735
jmp.w __local_58
; gsym_addr t 46735 a 0 ind 46775
__local_58:
; gsym_addr t 46735 a 46809 ind 46809
; add sp, #__attemptEscape_locals
.ifgr __attemptEscape_locals 0
tsa
clc
adc #__attemptEscape_locals
tas
.endif
rtl
.ENDS

.SECTION ".applyTimeStoptext_0xe" SUPERFREE

applyTimeStop:
; sub sp,#__applyTimeStop_locals
.ifgr __applyTimeStop_locals 0
tsa
sec
sbc #__applyTimeStop_locals
tas
.endif
; load 0
; type 16 reg 0x3f0 extra 0x42a9000
; ld2 [playerCharacter + 4], tcc__r0
lda.l playerCharacter + 4
sta.b tcc__r0
; gen_opi len 2 op 0x92
; ucmpcd tcc__r0, #15
ldx #1
lda.b tcc__r0
sec
sbc.w #15
tay
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 47378 ind 47378
; gsym_addr t 0 a 47417 ind 47417
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 47507 ind 47507
; cmp op 0x95 inv 1 v 243 r 47507
; cmp ne
bne +
; gsym_addr t 0 a 47597 ind 47597
brl __local_59
+
; gtst finished; t 47507
; gjmp_addr 0 at 47673
jmp.w __local_60
; gsym_addr t 47673 a 0 ind 47713
__local_59:
; gsym_addr t 47507 a 47747 ind 47747
; load 0
; type 16 reg 0x3f0 extra 0x42a9000
; ld2 [playerCharacter + 4], tcc__r0
lda.l playerCharacter + 4
sta.b tcc__r0
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 4 r type 0x10)
; length xxy 2 vtop->type 0x10
sec
lda.b tcc__r0
sbc.w #15
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x4
; st2 tcc__r0, [playerCharacter,4]
lda.b tcc__r0
sta.l playerCharacter + 4
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #3,tcc__r0
lda.w #3
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x25
; st1 tcc__r0, [currentBattle,37]
sep #$20
lda.b tcc__r0
sta.l currentBattle + 37
rep #$20
__local_60:
; gsym_addr t 47673 a 48392 ind 48392
; add sp, #__applyTimeStop_locals
.ifgr __applyTimeStop_locals 0
tsa
clc
adc #__applyTimeStop_locals
tas
.endif
rtl
.ENDS

.SECTION ".applySlowMotiontext_0xf" SUPERFREE

applySlowMotion:
; sub sp,#__applySlowMotion_locals
.ifgr __applySlowMotion_locals 0
tsa
sec
sbc #__applySlowMotion_locals
tas
.endif
; load 0
; type 16 reg 0x3f0 extra 0x42a9000
; ld2 [playerCharacter + 4], tcc__r0
lda.l playerCharacter + 4
sta.b tcc__r0
; gen_opi len 2 op 0x92
; ucmpcd tcc__r0, #10
ldx #1
lda.b tcc__r0
sec
sbc.w #10
tay
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 48971 ind 48971
; gsym_addr t 0 a 49010 ind 49010
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 49100 ind 49100
; cmp op 0x95 inv 1 v 243 r 49100
; cmp ne
bne +
; gsym_addr t 0 a 49190 ind 49190
brl __local_61
+
; gtst finished; t 49100
; gjmp_addr 0 at 49266
jmp.w __local_62
; gsym_addr t 49266 a 0 ind 49306
__local_61:
; gsym_addr t 49100 a 49340 ind 49340
; load 0
; type 16 reg 0x3f0 extra 0x42a9000
; ld2 [playerCharacter + 4], tcc__r0
lda.l playerCharacter + 4
sta.b tcc__r0
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 4 r type 0x10)
; length xxy 2 vtop->type 0x10
sec
lda.b tcc__r0
sbc.w #10
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x4
; st2 tcc__r0, [playerCharacter,4]
lda.b tcc__r0
sta.l playerCharacter + 4
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #2,tcc__r0
lda.w #2
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x26
; st1 tcc__r0, [currentBattle,38]
sep #$20
lda.b tcc__r0
sta.l currentBattle + 38
rep #$20
__local_62:
; gsym_addr t 49266 a 49985 ind 49985
; add sp, #__applySlowMotion_locals
.ifgr __applySlowMotion_locals 0
tsa
clc
adc #__applySlowMotion_locals
tas
.endif
rtl
.ENDS

.SECTION ".rewindBattleTurntext_0x10" SUPERFREE

rewindBattleTurn:
; sub sp,#__rewindBattleTurn_locals
.ifgr __rewindBattleTurn_locals 0
tsa
sec
sbc #__rewindBattleTurn_locals
tas
.endif
; load 0
; type 16 reg 0x3f0 extra 0x42a9000
; ld2 [playerCharacter + 4], tcc__r0
lda.l playerCharacter + 4
sta.b tcc__r0
; gen_opi len 2 op 0x92
; ucmpcd tcc__r0, #20
ldx #1
lda.b tcc__r0
sec
sbc.w #20
tay
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 50576 ind 50576
; gsym_addr t 0 a 50615 ind 50615
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 50705 ind 50705
; cmp op 0x95 inv 1 v 243 r 50705
; cmp ne
bne +
; gsym_addr t 0 a 50795 ind 50795
brl __local_63
+
; gtst finished; t 50705
; gjmp_addr 0 at 50871
jmp.w __local_64
; gsym_addr t 50871 a 0 ind 50911
__local_63:
; gsym_addr t 50705 a 50945 ind 50945
; load 0
; type 16 reg 0xf0 extra 0x4295000
; ld2 #10,tcc__r0
lda.w #10
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x10 fc 0xfffffffe
; st2 tcc__r0, [sp,-2]
; stack adjust: fc + disp - loc - 256 -254
lda.b tcc__r0
sta -2 + __rewindBattleTurn_locals + 1,s
; load 0
; type 16 reg 0x3f0 extra 0x42a9000
; ld2 [playerCharacter + 0], tcc__r0
lda.l playerCharacter + 0
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x42a9000
; ld2 [sp,-2],tcc__r1
; stack adjust: fc + disp - loc - 256 -254
lda -2 + __rewindBattleTurn_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x1de1af80)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x42a9000
; ld2 [playerCharacter + 2], tcc__r1
lda.l playerCharacter + 2
sta.b tcc__r1
; gen_opi len 2 op 0x97
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq +
bcs ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 51943 ind 51943
; gsym_addr t 0 a 51982 ind 51982
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 52072 ind 52072
; cmp op 0x95 inv 1 v 243 r 52072
; cmp ne
bne +
; gsym_addr t 0 a 52162 ind 52162
brl __local_65
+
; gtst finished; t 52072
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [playerCharacter + 2], tcc__r0
lda.l playerCharacter + 2
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [playerCharacter,0]
lda.b tcc__r0
sta.l playerCharacter + 0
; gjmp_addr 0 at 52467
jmp.w __local_66
; gsym_addr t 52467 a 0 ind 52507
__local_65:
; gsym_addr t 52072 a 52541 ind 52541
; load 0
; type 16 reg 0x3f0 extra 0x42a9000
; ld2 [playerCharacter + 0], tcc__r0
lda.l playerCharacter + 0
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x42a9000
; ld2 [sp,-2],tcc__r1
; stack adjust: fc + disp - loc - 256 -254
lda -2 + __rewindBattleTurn_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x10)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [playerCharacter,0]
lda.b tcc__r0
sta.l playerCharacter + 0
__local_66:
; gsym_addr t 52467 a 53143 ind 53143
; load 0
; type 16 reg 0x3f0 extra 0x42a9000
; ld2 [playerCharacter + 4], tcc__r0
lda.l playerCharacter + 4
sta.b tcc__r0
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 4 r type 0x10)
; length xxy 2 vtop->type 0x10
sec
lda.b tcc__r0
sbc.w #20
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x4
; st2 tcc__r0, [playerCharacter,4]
lda.b tcc__r0
sta.l playerCharacter + 4
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x24
; st1 tcc__r0, [currentBattle,36]
sep #$20
lda.b tcc__r0
sta.l currentBattle + 36
rep #$20
__local_64:
; gsym_addr t 50871 a 53788 ind 53788
; add sp, #__rewindBattleTurn_locals
.ifgr __rewindBattleTurn_locals 0
tsa
clc
adc #__rewindBattleTurn_locals
tas
.endif
rtl
.ENDS

.SECTION ".tccs_{WLA_FILENAME}_updateTimeEffectstext_0x11" SUPERFREE

tccs_{WLA_FILENAME}_updateTimeEffects:
; sub sp,#__tccs_{WLA_FILENAME}_updateTimeEffects_locals
.ifgr __tccs_{WLA_FILENAME}_updateTimeEffects_locals 0
tsa
sec
sbc #__tccs_{WLA_FILENAME}_updateTimeEffects_locals
tas
.endif
; load 0
; type 17 reg 0x53f0 extra 0x1de17d10
; ld1 [currentBattle + 37], tcc__r0
lda.w #0
sep #$20
lda.l currentBattle + 37
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x9f
; cmpcd tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc.w #0
tay
beq ++
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 54540 ind 54540
; gsym_addr t 0 a 54579 ind 54579
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 54669 ind 54669
; cmp op 0x95 inv 1 v 243 r 54669
; cmp ne
bne +
; gsym_addr t 0 a 54759 ind 54759
brl __local_67
+
; gtst finished; t 54669
; load 0
; type 17 reg 0x53f0 extra 0x1de17d10
; ld1 [currentBattle + 37], tcc__r0
lda.w #0
sep #$20
lda.l currentBattle + 37
rep #$20
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 37 r type 0x11)
; length xxy 2 vtop->type 0x0
dec.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x25
; st1 tcc__r0, [currentBattle,37]
sep #$20
lda.b tcc__r0
sta.l currentBattle + 37
rep #$20
; load 0
; type 17 reg 0x53f0 extra 0x1de17d10
; ld1 [currentBattle + 37], tcc__r0
lda.w #0
sep #$20
lda.l currentBattle + 37
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x9f
; cmpcd tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc.w #0
tay
beq ++
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 55656 ind 55656
; gsym_addr t 0 a 55695 ind 55695
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 55785 ind 55785
; cmp op 0x95 inv 1 v 243 r 55785
; cmp ne
bne +
; gsym_addr t 0 a 55875 ind 55875
brl __local_68
+
; gtst finished; t 55785
; gtst inv 1 t 0 v 240 r 55951 ind 55951
; load 0
; type 17 reg 0x53f0 extra 0x1de183e0
; ld1 [currentBattle + 36], tcc__r0
lda.w #0
sep #$20
lda.l currentBattle + 36
rep #$20
sta.b tcc__r0
; gsym_addr t 0 a 56141 ind 56141
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 56231 ind 56231
; cmp op 0x95 inv 1 v 243 r 56231
; cmp ne
bne +
; gsym_addr t 0 a 56321 ind 56321
brl __local_69
+
; gtst finished; t 56231
; gtst inv 1 t 55785 v 244 r 56397 ind 56397
; VT_jmp r 56397 t 55785 ji 0 inv 1 vtop->c.i 56231
; gjmp_addr 55785 at 56494
jmp.w __local_70
; gsym_addr t 56494 a 55785 ind 56538
__local_69:
; gsym_addr t 56231 a 56576 ind 56576
; gtst finished; t 56494
; gtst inv 1 t 0 v 245 r 56639 ind 56639
; VT_jmp r 56639 t 0 ji 1 inv 1 vtop->c.i 56494
; gsym_addr t 0 a 56728 ind 56728
; gtst finished; t 56494
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x24
; st1 tcc__r0, [currentBattle,36]
sep #$20
lda.b tcc__r0
sta.l currentBattle + 36
rep #$20
__local_68:
__local_70:
; gsym_addr t 56494 a 56996 ind 56996
__local_67:
; gsym_addr t 54669 a 57034 ind 57034
; load 0
; type 17 reg 0x53f0 extra 0x1de17700
; ld1 [currentBattle + 38], tcc__r0
lda.w #0
sep #$20
lda.l currentBattle + 38
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x9f
; cmpcd tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc.w #0
tay
beq ++
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 57362 ind 57362
; gsym_addr t 0 a 57401 ind 57401
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 57491 ind 57491
; cmp op 0x95 inv 1 v 243 r 57491
; cmp ne
bne +
; gsym_addr t 0 a 57581 ind 57581
brl __local_71
+
; gtst finished; t 57491
; load 0
; type 17 reg 0x53f0 extra 0x1de17700
; ld1 [currentBattle + 38], tcc__r0
lda.w #0
sep #$20
lda.l currentBattle + 38
rep #$20
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x6bc45164
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 38 r type 0x11)
; length xxy 2 vtop->type 0x0
dec.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x26
; st1 tcc__r0, [currentBattle,38]
sep #$20
lda.b tcc__r0
sta.l currentBattle + 38
rep #$20
__local_71:
; gsym_addr t 57491 a 58195 ind 58195
; gsym_addr t 0 a 58233 ind 58233
; add sp, #__tccs_{WLA_FILENAME}_updateTimeEffects_locals
.ifgr __tccs_{WLA_FILENAME}_updateTimeEffects_locals 0
tsa
clc
adc #__tccs_{WLA_FILENAME}_updateTimeEffects_locals
tas
.endif
rtl
.ENDS

.SECTION ".tccs_{WLA_FILENAME}_checkBattleEndConditionstext_0x12" SUPERFREE

tccs_{WLA_FILENAME}_checkBattleEndConditions:
; sub sp,#__tccs_{WLA_FILENAME}_checkBattleEndConditions_locals
.ifgr __tccs_{WLA_FILENAME}_checkBattleEndConditions_locals 0
tsa
sec
sbc #__tccs_{WLA_FILENAME}_checkBattleEndConditions_locals
tas
.endif
; load 0
; type 16 reg 0x3f0 extra 0x42a9000
; ld2 [playerCharacter + 0], tcc__r0
lda.l playerCharacter + 0
sta.b tcc__r0
; gen_opi len 2 op 0x96
; ucmpcd tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc.w #0
tay
beq ++
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 59031 ind 59031
; gsym_addr t 0 a 59070 ind 59070
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 59160 ind 59160
; cmp op 0x95 inv 1 v 243 r 59160
; cmp ne
bne +
; gsym_addr t 0 a 59250 ind 59250
brl __local_72
+
; gtst finished; t 59160
; load 0
; type 5 reg 0xf0 extra 0x1de19ec0
; ld2 #4,tcc__r0
lda.w #4
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x5 fc 0x0
; st2 tcc__r0, [currentBattle,0]
lda.b tcc__r0
sta.l currentBattle + 0
; gjmp_addr 0 at 59518
jmp.w __local_73
; gsym_addr t 59518 a 0 ind 59558
__local_72:
; gsym_addr t 59160 a 59592 ind 59592
; load 0
; type 16 reg 0x3f0 extra 0x42a9000
; ld2 [currentBattle + 20], tcc__r0
lda.l currentBattle + 20
sta.b tcc__r0
; gen_opi len 2 op 0x96
; ucmpcd tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc.w #0
tay
beq ++
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 59870 ind 59870
; gsym_addr t 0 a 59909 ind 59909
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 59999 ind 59999
; cmp op 0x95 inv 1 v 243 r 59999
; cmp ne
bne +
; gsym_addr t 0 a 60089 ind 60089
brl __local_74
+
; gtst finished; t 59999
; load 0
; type 5 reg 0xf0 extra 0x1de19ec0
; ld2 #3,tcc__r0
lda.w #3
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x5 fc 0x0
; st2 tcc__r0, [currentBattle,0]
lda.b tcc__r0
sta.l currentBattle + 0
; load 0
; type 16 reg 0x3f0 extra 0x42a9000
; ld2 [playerCharacter + 8], tcc__r0
lda.l playerCharacter + 8
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x42a9000
; ld2 [currentBattle + 28], tcc__r1
lda.l currentBattle + 28
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x10 c 8 r type 0x10)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x8
; st2 tcc__r0, [playerCharacter,8]
lda.b tcc__r0
sta.l playerCharacter + 8
; call r 0x2f0
jsr.l levelUpPlayerCharacter
__local_74:
; gsym_addr t 59999 a 60920 ind 60920
__local_73:
; gsym_addr t 59518 a 60958 ind 60958
; gsym_addr t 0 a 60996 ind 60996
; add sp, #__tccs_{WLA_FILENAME}_checkBattleEndConditions_locals
.ifgr __tccs_{WLA_FILENAME}_checkBattleEndConditions_locals 0
tsa
clc
adc #__tccs_{WLA_FILENAME}_checkBattleEndConditions_locals
tas
.endif
rtl
.ENDS

.SECTION ".handleBattleInputtext_0x13" SUPERFREE

handleBattleInput:
; sub sp,#__handleBattleInput_locals
.ifgr __handleBattleInput_locals 0
tsa
sec
sbc #__handleBattleInput_locals
tas
.endif
; load 0
; type 0 reg 0x3f0 extra 0x42a9000
; ld2 [currentBattle + 0], tcc__r0
lda.l currentBattle + 0
sta.b tcc__r0
; gen_opi len 2 op 0x95
; cmpr(n)eq tcc__r0, #2
ldx #1
lda.b tcc__r0
sec
sbc #2
tay
bne +
dex
+
stx.b tcc__r5
; gtst inv 0 t 0 v 5 r 61665 ind 61665
; gsym_addr t 0 a 61704 ind 61704
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 0 t 0 v 243 r 61794 ind 61794
; cmp op 0x95 inv 0 v 243 r 61794
; cmp ne
beq +
; gsym_addr t 0 a 61884 ind 61884
brl __local_75
+
; gtst finished; t 61794
; gtst inv 1 t 0 v 240 r 61960 ind 61960
; load 0
; type 17 reg 0x53f0 extra 0x1de183e0
; ld1 [currentBattle + 36], tcc__r0
lda.w #0
sep #$20
lda.l currentBattle + 36
rep #$20
sta.b tcc__r0
; gsym_addr t 0 a 62150 ind 62150
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 62240 ind 62240
; cmp op 0x95 inv 1 v 243 r 62240
; cmp ne
bne +
; gsym_addr t 0 a 62330 ind 62330
brl __local_76
+
; gtst finished; t 62240
; gtst inv 0 t 61794 v 244 r 62406 ind 62406
; VT_jmp r 62406 t 61794 ji 0 inv 0 vtop->c.i 62240
__local_75:
; gsym_addr t 61794 a 62503 ind 62503
; gtst finished; t 62240
; gtst inv 1 t 0 v 244 r 62566 ind 62566
; VT_jmp r 62566 t 0 ji 0 inv 1 vtop->c.i 62240
; gjmp_addr 0 at 62655
jmp.w __local_77
; gsym_addr t 62655 a 0 ind 62695
__local_76:
; gsym_addr t 62240 a 62729 ind 62729
; gtst finished; t 62655
; gjmp_addr 0 at 62792
jmp.w __local_78
; gsym_addr t 62792 a 0 ind 62832
__local_77:
; gsym_addr t 62655 a 62866 ind 62866
; load 0
; type 16 reg 0x1f2 extra 0xc7070078
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -251
lda 3 + __handleBattleInput_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 3 r type 0x1de1af80)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #128
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 63241 ind 63241
; gsym_addr t 0 a 63280 ind 63280
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 63370 ind 63370
; cmp op 0x95 inv 1 v 243 r 63370
; cmp ne
bne +
; gsym_addr t 0 a 63460 ind 63460
brl __local_79
+
; gtst finished; t 63370
; load 0
; type 16 reg 0x1f2 extra 0xc7070078
; ld2 [sp,5],tcc__r0
; stack adjust: fc + disp - loc - 256 -249
lda 5 + __handleBattleInput_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 5 r type 0x1de1af80)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #128
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 63873 ind 63873
; gsym_addr t 0 a 63912 ind 63912
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 64002 ind 64002
; cmp op 0x95 inv 1 v 243 r 64002
; cmp ne
bne +
; gsym_addr t 0 a 64092 ind 64092
brl __local_80
+
; gtst finished; t 64002
; gtst inv 1 t 63370 v 244 r 64168 ind 64168
; VT_jmp r 64168 t 63370 ji 0 inv 1 vtop->c.i 64002
; gjmp_addr 63370 at 64265
jmp.w __local_81
; gsym_addr t 64265 a 63370 ind 64309
__local_80:
; gsym_addr t 64002 a 64347 ind 64347
; gtst finished; t 64265
; gtst inv 1 t 0 v 245 r 64410 ind 64410
; VT_jmp r 64410 t 0 ji 1 inv 1 vtop->c.i 64265
; gsym_addr t 0 a 64499 ind 64499
; gtst finished; t 64265
; push1 imm r 0xf0
sep #$20
lda #0
pha
rep #$20
; call r 0x2f0
jsr.l setBattleAction
; add sp, #1
tsa
clc
adc #1
tas
; call r 0x2f0
jsr.l processBattleTurn
; gjmp_addr 0 at 64714
jmp.w __local_82
; gsym_addr t 64714 a 0 ind 64754
__local_79:
__local_81:
; gsym_addr t 64265 a 64788 ind 64788
; load 0
; type 16 reg 0x1f2 extra 0xc7070078
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -251
lda 3 + __handleBattleInput_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 3 r type 0x1de1af80)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #32768
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 65165 ind 65165
; gsym_addr t 0 a 65204 ind 65204
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 65294 ind 65294
; cmp op 0x95 inv 1 v 243 r 65294
; cmp ne
bne +
; gsym_addr t 0 a 65384 ind 65384
brl __local_83
+
; gtst finished; t 65294
; load 0
; type 16 reg 0x1f2 extra 0xc7070078
; ld2 [sp,5],tcc__r0
; stack adjust: fc + disp - loc - 256 -249
lda 5 + __handleBattleInput_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 5 r type 0x1de1af80)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #32768
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 65799 ind 65799
; gsym_addr t 0 a 65838 ind 65838
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 65928 ind 65928
; cmp op 0x95 inv 1 v 243 r 65928
; cmp ne
bne +
; gsym_addr t 0 a 66018 ind 66018
brl __local_84
+
; gtst finished; t 65928
; gtst inv 1 t 65294 v 244 r 66094 ind 66094
; VT_jmp r 66094 t 65294 ji 0 inv 1 vtop->c.i 65928
; gjmp_addr 65294 at 66191
jmp.w __local_85
; gsym_addr t 66191 a 65294 ind 66235
__local_84:
; gsym_addr t 65928 a 66273 ind 66273
; gtst finished; t 66191
; gtst inv 1 t 0 v 245 r 66336 ind 66336
; VT_jmp r 66336 t 0 ji 1 inv 1 vtop->c.i 66191
; gsym_addr t 0 a 66425 ind 66425
; gtst finished; t 66191
; push1 imm r 0xf0
sep #$20
lda #1
pha
rep #$20
; call r 0x2f0
jsr.l setBattleAction
; add sp, #1
tsa
clc
adc #1
tas
; call r 0x2f0
jsr.l processBattleTurn
; gjmp_addr 0 at 66640
jmp.w __local_86
; gsym_addr t 66640 a 0 ind 66680
__local_83:
__local_85:
; gsym_addr t 66191 a 66714 ind 66714
; load 0
; type 16 reg 0x1f2 extra 0xc7070078
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -251
lda 3 + __handleBattleInput_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 3 r type 0x1de1af80)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #64
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 67088 ind 67088
; gsym_addr t 0 a 67127 ind 67127
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 67217 ind 67217
; cmp op 0x95 inv 1 v 243 r 67217
; cmp ne
bne +
; gsym_addr t 0 a 67307 ind 67307
brl __local_87
+
; gtst finished; t 67217
; load 0
; type 16 reg 0x1f2 extra 0xc7070078
; ld2 [sp,5],tcc__r0
; stack adjust: fc + disp - loc - 256 -249
lda 5 + __handleBattleInput_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 5 r type 0x1de1af80)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #64
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 67719 ind 67719
; gsym_addr t 0 a 67758 ind 67758
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 67848 ind 67848
; cmp op 0x95 inv 1 v 243 r 67848
; cmp ne
bne +
; gsym_addr t 0 a 67938 ind 67938
brl __local_88
+
; gtst finished; t 67848
; gtst inv 1 t 67217 v 244 r 68014 ind 68014
; VT_jmp r 68014 t 67217 ji 0 inv 1 vtop->c.i 67848
; gjmp_addr 67217 at 68111
jmp.w __local_89
; gsym_addr t 68111 a 67217 ind 68155
__local_88:
; gsym_addr t 67848 a 68193 ind 68193
; gtst finished; t 68111
; gtst inv 1 t 0 v 245 r 68256 ind 68256
; VT_jmp r 68256 t 0 ji 1 inv 1 vtop->c.i 68111
; gsym_addr t 0 a 68345 ind 68345
; gtst finished; t 68111
; load 0
; type 16 reg 0x3f0 extra 0x42a9000
; ld2 [playerCharacter + 4], tcc__r0
lda.l playerCharacter + 4
sta.b tcc__r0
; gen_opi len 2 op 0x93
; ucmpcd tcc__r0, #15
ldx #1
lda.b tcc__r0
sec
sbc.w #15
tay
bcs ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 68641 ind 68641
; gsym_addr t 0 a 68680 ind 68680
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 68770 ind 68770
; cmp op 0x95 inv 1 v 243 r 68770
; cmp ne
bne +
; gsym_addr t 0 a 68860 ind 68860
brl __local_90
+
; gtst finished; t 68770
; push1 imm r 0xf0
sep #$20
lda #2
pha
rep #$20
; call r 0x2f0
jsr.l setBattleAction
; add sp, #1
tsa
clc
adc #1
tas
; call r 0x2f0
jsr.l processBattleTurn
__local_90:
; gsym_addr t 68770 a 69092 ind 69092
; gjmp_addr 0 at 69130
jmp.w __local_91
; gsym_addr t 69130 a 0 ind 69170
__local_87:
__local_89:
; gsym_addr t 68111 a 69204 ind 69204
; load 0
; type 16 reg 0x1f2 extra 0xc7070078
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -251
lda 3 + __handleBattleInput_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 3 r type 0x1de1af80)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #16384
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 69581 ind 69581
; gsym_addr t 0 a 69620 ind 69620
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 69710 ind 69710
; cmp op 0x95 inv 1 v 243 r 69710
; cmp ne
bne +
; gsym_addr t 0 a 69800 ind 69800
brl __local_92
+
; gtst finished; t 69710
; load 0
; type 16 reg 0x1f2 extra 0xc7070078
; ld2 [sp,5],tcc__r0
; stack adjust: fc + disp - loc - 256 -249
lda 5 + __handleBattleInput_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 5 r type 0x1de1af80)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #16384
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 70215 ind 70215
; gsym_addr t 0 a 70254 ind 70254
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 70344 ind 70344
; cmp op 0x95 inv 1 v 243 r 70344
; cmp ne
bne +
; gsym_addr t 0 a 70434 ind 70434
brl __local_93
+
; gtst finished; t 70344
; gtst inv 1 t 69710 v 244 r 70510 ind 70510
; VT_jmp r 70510 t 69710 ji 0 inv 1 vtop->c.i 70344
; gjmp_addr 69710 at 70607
jmp.w __local_94
; gsym_addr t 70607 a 69710 ind 70651
__local_93:
; gsym_addr t 70344 a 70689 ind 70689
; gtst finished; t 70607
; gtst inv 1 t 0 v 245 r 70752 ind 70752
; VT_jmp r 70752 t 0 ji 1 inv 1 vtop->c.i 70607
; gsym_addr t 0 a 70841 ind 70841
; gtst finished; t 70607
; load 0
; type 16 reg 0x3f0 extra 0x42a9000
; ld2 [playerCharacter + 4], tcc__r0
lda.l playerCharacter + 4
sta.b tcc__r0
; gen_opi len 2 op 0x93
; ucmpcd tcc__r0, #10
ldx #1
lda.b tcc__r0
sec
sbc.w #10
tay
bcs ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 71137 ind 71137
; gsym_addr t 0 a 71176 ind 71176
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 71266 ind 71266
; cmp op 0x95 inv 1 v 243 r 71266
; cmp ne
bne +
; gsym_addr t 0 a 71356 ind 71356
brl __local_95
+
; gtst finished; t 71266
; push1 imm r 0xf0
sep #$20
lda #3
pha
rep #$20
; call r 0x2f0
jsr.l setBattleAction
; add sp, #1
tsa
clc
adc #1
tas
; call r 0x2f0
jsr.l processBattleTurn
__local_95:
; gsym_addr t 71266 a 71588 ind 71588
; gjmp_addr 0 at 71626
jmp.w __local_96
; gsym_addr t 71626 a 0 ind 71666
__local_92:
__local_94:
; gsym_addr t 70607 a 71700 ind 71700
; load 0
; type 16 reg 0x1f2 extra 0xc7070078
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -251
lda 3 + __handleBattleInput_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 3 r type 0x1de1af80)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #32
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 72074 ind 72074
; gsym_addr t 0 a 72113 ind 72113
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 72203 ind 72203
; cmp op 0x95 inv 1 v 243 r 72203
; cmp ne
bne +
; gsym_addr t 0 a 72293 ind 72293
brl __local_97
+
; gtst finished; t 72203
; load 0
; type 16 reg 0x1f2 extra 0xc7070078
; ld2 [sp,5],tcc__r0
; stack adjust: fc + disp - loc - 256 -249
lda 5 + __handleBattleInput_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 5 r type 0x1de1af80)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #32
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 72705 ind 72705
; gsym_addr t 0 a 72744 ind 72744
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 72834 ind 72834
; cmp op 0x95 inv 1 v 243 r 72834
; cmp ne
bne +
; gsym_addr t 0 a 72924 ind 72924
brl __local_98
+
; gtst finished; t 72834
; gtst inv 1 t 72203 v 244 r 73000 ind 73000
; VT_jmp r 73000 t 72203 ji 0 inv 1 vtop->c.i 72834
; gjmp_addr 72203 at 73097
jmp.w __local_99
; gsym_addr t 73097 a 72203 ind 73141
__local_98:
; gsym_addr t 72834 a 73179 ind 73179
; gtst finished; t 73097
; gtst inv 1 t 0 v 245 r 73242 ind 73242
; VT_jmp r 73242 t 0 ji 1 inv 1 vtop->c.i 73097
; gsym_addr t 0 a 73331 ind 73331
; gtst finished; t 73097
; load 0
; type 16 reg 0x3f0 extra 0x42a9000
; ld2 [playerCharacter + 4], tcc__r0
lda.l playerCharacter + 4
sta.b tcc__r0
; gen_opi len 2 op 0x93
; ucmpcd tcc__r0, #20
ldx #1
lda.b tcc__r0
sec
sbc.w #20
tay
bcs ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 73627 ind 73627
; gsym_addr t 0 a 73666 ind 73666
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 73756 ind 73756
; cmp op 0x95 inv 1 v 243 r 73756
; cmp ne
bne +
; gsym_addr t 0 a 73846 ind 73846
brl __local_100
+
; gtst finished; t 73756
; push1 imm r 0xf0
sep #$20
lda #4
pha
rep #$20
; call r 0x2f0
jsr.l setBattleAction
; add sp, #1
tsa
clc
adc #1
tas
; call r 0x2f0
jsr.l processBattleTurn
__local_100:
; gsym_addr t 73756 a 74079 ind 74079
; gjmp_addr 0 at 74117
jmp.w __local_101
; gsym_addr t 74117 a 0 ind 74158
__local_97:
__local_99:
; gsym_addr t 73097 a 74192 ind 74192
; load 0
; type 16 reg 0x1f2 extra 0xc7070078
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -251
lda 3 + __handleBattleInput_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 3 r type 0x1de1af80)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #16
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 74566 ind 74566
; gsym_addr t 0 a 74605 ind 74605
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 74695 ind 74695
; cmp op 0x95 inv 1 v 243 r 74695
; cmp ne
bne +
; gsym_addr t 0 a 74785 ind 74785
brl __local_102
+
; gtst finished; t 74695
; load 0
; type 16 reg 0x1f2 extra 0xc7070078
; ld2 [sp,5],tcc__r0
; stack adjust: fc + disp - loc - 256 -249
lda 5 + __handleBattleInput_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 5 r type 0x1de1af80)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #16
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 75198 ind 75198
; gsym_addr t 0 a 75237 ind 75237
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 75327 ind 75327
; cmp op 0x95 inv 1 v 243 r 75327
; cmp ne
bne +
; gsym_addr t 0 a 75417 ind 75417
brl __local_103
+
; gtst finished; t 75327
; gtst inv 1 t 74695 v 244 r 75494 ind 75494
; VT_jmp r 75494 t 74695 ji 0 inv 1 vtop->c.i 75327
; gjmp_addr 74695 at 75591
jmp.w __local_104
; gsym_addr t 75591 a 74695 ind 75636
__local_103:
; gsym_addr t 75327 a 75674 ind 75674
; gtst finished; t 75591
; gtst inv 1 t 0 v 245 r 75737 ind 75737
; VT_jmp r 75737 t 0 ji 1 inv 1 vtop->c.i 75591
; gsym_addr t 0 a 75826 ind 75826
; gtst finished; t 75591
; push1 imm r 0xf0
sep #$20
lda #5
pha
rep #$20
; call r 0x2f0
jsr.l setBattleAction
; add sp, #1
tsa
clc
adc #1
tas
; call r 0x2f0
jsr.l processBattleTurn
__local_102:
__local_104:
; gsym_addr t 75591 a 76041 ind 76041
__local_101:
; gsym_addr t 74117 a 76079 ind 76079
__local_96:
; gsym_addr t 71626 a 76117 ind 76117
__local_91:
; gsym_addr t 69130 a 76155 ind 76155
__local_86:
; gsym_addr t 66640 a 76193 ind 76193
__local_82:
; gsym_addr t 64714 a 76231 ind 76231
__local_78:
; gsym_addr t 62792 a 76269 ind 76269
; add sp, #__handleBattleInput_locals
.ifgr __handleBattleInput_locals 0
tsa
clc
adc #__handleBattleInput_locals
tas
.endif
rtl
.ENDS

.SECTION ".drawBattleScreentext_0x14" SUPERFREE

drawBattleScreen:
; sub sp,#__drawBattleScreen_locals
.ifgr __drawBattleScreen_locals 0
tsa
sec
sbc #__drawBattleScreen_locals
tas
.endif
; load 0
; type 0 reg 0xf0 extra 0x726f6620
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffffc
; st2 tcc__r0, [sp,-4]
; stack adjust: fc + disp - loc - 256 -254
lda.b tcc__r0
sta -4 + __drawBattleScreen_locals + 1,s
__local_107:
; load 0
; type 0 reg 0x1f2 extra 0x42a9000
; ld2 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc - 256 -254
lda -4 + __drawBattleScreen_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x9c
; cmpcd tcc__r0, #28
ldx #1
lda.b tcc__r0
sec
sbc.w #28
tay
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 77178 ind 77178
; gsym_addr t 0 a 77217 ind 77217
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 77307 ind 77307
; cmp op 0x95 inv 1 v 243 r 77307
; cmp ne
bne +
; gsym_addr t 0 a 77397 ind 77397
brl __local_105
+
; gtst finished; t 77307
; gjmp_addr 0 at 77474
jmp.w __local_106
; gsym_addr t 77474 a 0 ind 77515
__local_112:
; load 0
; type 0 reg 0x1f2 extra 0x726f6620
; ld2 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc - 256 -254
lda -4 + __drawBattleScreen_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -4 r type 0x0)
; length xxy 2 vtop->type 0x0
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffffc
; st2 tcc__r0, [sp,-4]
; stack adjust: fc + disp - loc - 256 -254
lda.b tcc__r0
sta -4 + __drawBattleScreen_locals + 1,s
; gjmp_addr 76878 at 78129
jmp.w __local_107
; gsym_addr t 78129 a 76878 ind 78174
__local_106:
; gsym_addr t 77474 a 78212 ind 78212
; load 0
; type 0 reg 0xf0 extra 0x20353532
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffffe
; st2 tcc__r0, [sp,-2]
; stack adjust: fc + disp - loc - 256 -252
lda.b tcc__r0
sta -2 + __drawBattleScreen_locals + 1,s
__local_110:
; load 0
; type 0 reg 0x1f2 extra 0x42a9000
; ld2 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc - 256 -252
lda -2 + __drawBattleScreen_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x9c
; cmpcd tcc__r0, #32
ldx #1
lda.b tcc__r0
sec
sbc.w #32
tay
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 78799 ind 78799
; gsym_addr t 0 a 78838 ind 78838
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 78928 ind 78928
; cmp op 0x95 inv 1 v 243 r 78928
; cmp ne
bne +
; gsym_addr t 0 a 79018 ind 79018
brl __local_108
+
; gtst finished; t 78928
; gjmp_addr 0 at 79095
jmp.w __local_109
; gsym_addr t 79095 a 0 ind 79136
__local_111:
; load 0
; type 0 reg 0x1f2 extra 0x20353532
; ld2 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc - 256 -252
lda -2 + __drawBattleScreen_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -2 r type 0x0)
; length xxy 2 vtop->type 0x0
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffffe
; st2 tcc__r0, [sp,-2]
; stack adjust: fc + disp - loc - 256 -252
lda.b tcc__r0
sta -2 + __drawBattleScreen_locals + 1,s
; gjmp_addr 78499 at 79750
jmp.w __local_110
; gsym_addr t 79750 a 78499 ind 79795
__local_109:
; gsym_addr t 79095 a 79833 ind 79833
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}26
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}26 + 0
; ldpush before load type 0x10 reg 0x1f2
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc - 256 -250
lda 0 + __drawBattleScreen_locals + 1,s
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; ldpush before load type 0x10 reg 0x1f2
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc - 256 -246
lda 4 + __drawBattleScreen_locals + 1,s
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; gjmp_addr 79170 at 80558
jmp.w __local_111
; gsym_addr t 80558 a 79170 ind 80603
__local_108:
; gsym_addr t 78928 a 80641 ind 80641
; gsym_addr t 0 a 79170 ind 80679
; gjmp_addr 77549 at 80713
jmp.w __local_112
; gsym_addr t 80713 a 77549 ind 80758
__local_105:
; gsym_addr t 77307 a 80796 ind 80796
; gsym_addr t 0 a 77549 ind 80834
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}27
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}27 + 0
; push2 imm r 0xf0
pea.w 2
; push2 imm r 0xf0
pea.w 10
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; push4 imm r 0x12f0
pea.w :currentBattle
pea.w currentBattle + 4
; push2 imm r 0xf0
pea.w 4
; push2 imm r 0xf0
pea.w 10
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}28
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}28 + 0
; push2 imm r 0xf0
pea.w 8
; push2 imm r 0xf0
pea.w 2
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}29
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}29 + 0
; push2 imm r 0xf0
pea.w 8
; push2 imm r 0xf0
pea.w 20
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; call r 0x2f0
jsr.l drawBattleUI
; call r 0x2f0
jsr.l drawEnemySprite
; gsym_addr t 0 a 81848 ind 81848
; add sp, #__drawBattleScreen_locals
.ifgr __drawBattleScreen_locals 0
tsa
clc
adc #__drawBattleScreen_locals
tas
.endif
rtl
.ENDS

.SECTION ".drawBattleUItext_0x15" SUPERFREE

drawBattleUI:
; sub sp,#__drawBattleUI_locals
.ifgr __drawBattleUI_locals 0
tsa
sec
sbc #__drawBattleUI_locals
tas
.endif
; load 0
; type 0 reg 0xf0 extra 0x69747465
; ld2 #18,tcc__r0
lda.w #18
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffde
; st2 tcc__r0, [sp,-34]
; stack adjust: fc + disp - loc - 256 -254
lda.b tcc__r0
sta -34 + __drawBattleUI_locals + 1,s
__local_115:
; load 0
; type 0 reg 0x1f2 extra 0x42a9000
; ld2 [sp,-34],tcc__r0
; stack adjust: fc + disp - loc - 256 -254
lda -34 + __drawBattleUI_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x9c
; cmpcd tcc__r0, #28
ldx #1
lda.b tcc__r0
sec
sbc.w #28
tay
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 82728 ind 82728
; gsym_addr t 0 a 82767 ind 82767
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 82857 ind 82857
; cmp op 0x95 inv 1 v 243 r 82857
; cmp ne
bne +
; gsym_addr t 0 a 82947 ind 82947
brl __local_113
+
; gtst finished; t 82857
; gjmp_addr 0 at 83024
jmp.w __local_114
; gsym_addr t 83024 a 0 ind 83065
__local_116:
; load 0
; type 0 reg 0x1f2 extra 0x69747465
; ld2 [sp,-34],tcc__r0
; stack adjust: fc + disp - loc - 256 -254
lda -34 + __drawBattleUI_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -34 r type 0x0)
; length xxy 2 vtop->type 0x0
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffde
; st2 tcc__r0, [sp,-34]
; stack adjust: fc + disp - loc - 256 -254
lda.b tcc__r0
sta -34 + __drawBattleUI_locals + 1,s
; gjmp_addr 82430 at 83676
jmp.w __local_115
; gsym_addr t 83676 a 82430 ind 83721
__local_114:
; gsym_addr t 83024 a 83759 ind 83759
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}30
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}30 + 0
; ldpush before load type 0x10 reg 0x1f2
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-34],tcc__r0
; stack adjust: fc + disp - loc - 256 -250
lda -30 + __drawBattleUI_locals + 1,s
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; push2 imm r 0xf0
pea.w 0
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; gjmp_addr 83099 at 84259
jmp.w __local_116
; gsym_addr t 84259 a 83099 ind 84304
__local_113:
; gsym_addr t 82857 a 84342 ind 84342
; gsym_addr t 0 a 83099 ind 84380
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}31
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}31 + 0
; push2 imm r 0xf0
pea.w 19
; push2 imm r 0xf0
pea.w 1
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; ldpush before load type 0x10 reg 0x3f0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [playerCharacter + 2], tcc__r0
lda.l playerCharacter + 2
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; ldpush before load type 0x10 reg 0x3f0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [playerCharacter + 0], tcc__r0
lda.l playerCharacter + 0
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}32
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}32 + 0
; ldpush before load type 0x4 reg 0x10f2
; load 0
; type 4 reg 0x10f2 extra 0x0
; ld4 #(sp) + -32,tcc__r0 (fr 0x10f2 ft 0x4 fc 0xffffffe0)
stz.b tcc__r0h
tsa
clc
adc #(-24 + __drawBattleUI_locals + 1)
sta.b tcc__r0
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; call r 0x2f0
jsr.l sprintf
; add sp, #12
tsa
clc
adc #12
tas
; ldpush before load type 0x4 reg 0x10f2
; load 0
; type 4 reg 0x10f2 extra 0x0
; ld4 #(sp) + -32,tcc__r0 (fr 0x10f2 ft 0x4 fc 0xffffffe0)
stz.b tcc__r0h
tsa
clc
adc #(-32 + __drawBattleUI_locals + 1)
sta.b tcc__r0
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; push2 imm r 0xf0
pea.w 19
; push2 imm r 0xf0
pea.w 12
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; load 0
; type 16 reg 0x3f0 extra 0x42a9000
; ld2 [playerCharacter + 0], tcc__r0
lda.l playerCharacter + 0
sta.b tcc__r0
; gen_opi len 2 op *
; mul #10, tcc__r0
lda.w #10
sta.b tcc__r9
lda.b tcc__r0
sta.b tcc__r10
jsr.l tcc__mul
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x42a9000
; ld2 [playerCharacter + 2], tcc__r1
lda.l playerCharacter + 2
sta.b tcc__r1
; gen_opi len 2 op 0xb0
; div tcc__r1,tcc__r0
ldx.b tcc__r0
lda.b tcc__r1
jsr.l tcc__udiv
lda.b tcc__r9
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffdc
; st2 tcc__r0, [sp,-36]
; stack adjust: fc + disp - loc - 256 -254
lda.b tcc__r0
sta -36 + __drawBattleUI_locals + 1,s
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}33
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}33 + 0
; push2 imm r 0xf0
pea.w 20
; push2 imm r 0xf0
pea.w 1
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; load 0
; type 0 reg 0xf0 extra 0x69747465
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffde
; st2 tcc__r0, [sp,-34]
; stack adjust: fc + disp - loc - 256 -252
lda.b tcc__r0
sta -34 + __drawBattleUI_locals + 1,s
__local_119:
; load 0
; type 0 reg 0x1f2 extra 0x42a9000
; ld2 [sp,-34],tcc__r0
; stack adjust: fc + disp - loc - 256 -252
lda -34 + __drawBattleUI_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x9c
; cmpcd tcc__r0, #10
ldx #1
lda.b tcc__r0
sec
sbc.w #10
tay
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 87370 ind 87370
; gsym_addr t 0 a 87409 ind 87409
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 87499 ind 87499
; cmp op 0x95 inv 1 v 243 r 87499
; cmp ne
bne +
; gsym_addr t 0 a 87589 ind 87589
brl __local_117
+
; gtst finished; t 87499
; gjmp_addr 0 at 87666
jmp.w __local_118
; gsym_addr t 87666 a 0 ind 87707
__local_122:
; load 0
; type 0 reg 0x1f2 extra 0x69747465
; ld2 [sp,-34],tcc__r0
; stack adjust: fc + disp - loc - 256 -252
lda -34 + __drawBattleUI_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -34 r type 0x0)
; length xxy 2 vtop->type 0x0
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffde
; st2 tcc__r0, [sp,-34]
; stack adjust: fc + disp - loc - 256 -252
lda.b tcc__r0
sta -34 + __drawBattleUI_locals + 1,s
; gjmp_addr 87072 at 88318
jmp.w __local_119
; gsym_addr t 88318 a 87072 ind 88363
__local_118:
; gsym_addr t 87666 a 88401 ind 88401
; load 0
; type 0 reg 0x1f2 extra 0x42a9000
; ld2 [sp,-34],tcc__r0
; stack adjust: fc + disp - loc - 256 -252
lda -34 + __drawBattleUI_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x1f2 extra 0x42a9000
; ld2 [sp,-36],tcc__r1
; stack adjust: fc + disp - loc - 256 -254
lda -36 + __drawBattleUI_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x9c
; cmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 88907 ind 88907
; gsym_addr t 0 a 88946 ind 88946
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 89036 ind 89036
; cmp op 0x95 inv 1 v 243 r 89036
; cmp ne
bne +
; gsym_addr t 0 a 89126 ind 89126
brl __local_120
+
; gtst finished; t 89036
; load 0
; type 0 reg 0x1f2 extra 0x42a9000
; ld2 [sp,-34],tcc__r0
; stack adjust: fc + disp - loc - 256 -252
lda -34 + __drawBattleUI_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -34 r type 0x86)
; length xxy 2 vtop->type 0x0
inc.b tcc__r0
inc.b tcc__r0
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}34
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}34 + 0
; push2 imm r 0xf0
pea.w 20
; ldpush before load type 0x10 reg 0x0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; gjmp_addr 0 at 89818
jmp.w __local_121
; gsym_addr t 89818 a 0 ind 89859
__local_120:
; gsym_addr t 89036 a 89893 ind 89893
; load 0
; type 0 reg 0x1f2 extra 0x42a9000
; ld2 [sp,-34],tcc__r0
; stack adjust: fc + disp - loc - 256 -252
lda -34 + __drawBattleUI_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -34 r type 0x86)
; length xxy 2 vtop->type 0x0
inc.b tcc__r0
inc.b tcc__r0
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}35
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}35 + 0
; push2 imm r 0xf0
pea.w 20
; ldpush before load type 0x10 reg 0x0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
__local_121:
; gsym_addr t 89818 a 90546 ind 90546
; gjmp_addr 87741 at 90584
jmp.w __local_122
; gsym_addr t 90584 a 87741 ind 90629
__local_117:
; gsym_addr t 87499 a 90667 ind 90667
; gsym_addr t 0 a 87741 ind 90705
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}36
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}36 + 0
; push2 imm r 0xf0
pea.w 20
; push2 imm r 0xf0
pea.w 12
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}37
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}37 + 0
; push2 imm r 0xf0
pea.w 19
; push2 imm r 0xf0
pea.w 15
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; ldpush before load type 0x10 reg 0x3f0
; load 0
; type 16 reg 0x3f0 extra 0x1de1b630
; ld2 [currentBattle + 22], tcc__r0
lda.l currentBattle + 22
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; ldpush before load type 0x10 reg 0x3f0
; load 0
; type 16 reg 0x3f0 extra 0x1de1b980
; ld2 [currentBattle + 20], tcc__r0
lda.l currentBattle + 20
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}38
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}38 + 0
; ldpush before load type 0x4 reg 0x10f2
; load 0
; type 4 reg 0x10f2 extra 0x0
; ld4 #(sp) + -32,tcc__r0 (fr 0x10f2 ft 0x4 fc 0xffffffe0)
stz.b tcc__r0h
tsa
clc
adc #(-24 + __drawBattleUI_locals + 1)
sta.b tcc__r0
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; call r 0x2f0
jsr.l sprintf
; add sp, #12
tsa
clc
adc #12
tas
; ldpush before load type 0x4 reg 0x10f2
; load 0
; type 4 reg 0x10f2 extra 0x0
; ld4 #(sp) + -32,tcc__r0 (fr 0x10f2 ft 0x4 fc 0xffffffe0)
stz.b tcc__r0h
tsa
clc
adc #(-32 + __drawBattleUI_locals + 1)
sta.b tcc__r0
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; push2 imm r 0xf0
pea.w 19
; push2 imm r 0xf0
pea.w 26
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; load 0
; type 16 reg 0x3f0 extra 0x42a9000
; ld2 [currentBattle + 20], tcc__r0
lda.l currentBattle + 20
sta.b tcc__r0
; gen_opi len 2 op *
; mul #10, tcc__r0
lda.w #10
sta.b tcc__r9
lda.b tcc__r0
sta.b tcc__r10
jsr.l tcc__mul
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x42a9000
; ld2 [currentBattle + 22], tcc__r1
lda.l currentBattle + 22
sta.b tcc__r1
; gen_opi len 2 op 0xb0
; div tcc__r1,tcc__r0
ldx.b tcc__r0
lda.b tcc__r1
jsr.l tcc__udiv
lda.b tcc__r9
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffda
; st2 tcc__r0, [sp,-38]
; stack adjust: fc + disp - loc - 256 -254
lda.b tcc__r0
sta -38 + __drawBattleUI_locals + 1,s
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}39
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}39 + 0
; push2 imm r 0xf0
pea.w 20
; push2 imm r 0xf0
pea.w 15
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; load 0
; type 0 reg 0xf0 extra 0x69747465
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffde
; st2 tcc__r0, [sp,-34]
; stack adjust: fc + disp - loc - 256 -250
lda.b tcc__r0
sta -34 + __drawBattleUI_locals + 1,s
__local_125:
; load 0
; type 0 reg 0x1f2 extra 0x42a9000
; ld2 [sp,-34],tcc__r0
; stack adjust: fc + disp - loc - 256 -250
lda -34 + __drawBattleUI_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x9c
; cmpcd tcc__r0, #10
ldx #1
lda.b tcc__r0
sec
sbc.w #10
tay
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 93944 ind 93944
; gsym_addr t 0 a 93983 ind 93983
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 94073 ind 94073
; cmp op 0x95 inv 1 v 243 r 94073
; cmp ne
bne +
; gsym_addr t 0 a 94163 ind 94163
brl __local_123
+
; gtst finished; t 94073
; gjmp_addr 0 at 94240
jmp.w __local_124
; gsym_addr t 94240 a 0 ind 94281
__local_128:
; load 0
; type 0 reg 0x1f2 extra 0x69747465
; ld2 [sp,-34],tcc__r0
; stack adjust: fc + disp - loc - 256 -250
lda -34 + __drawBattleUI_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -34 r type 0x0)
; length xxy 2 vtop->type 0x0
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffde
; st2 tcc__r0, [sp,-34]
; stack adjust: fc + disp - loc - 256 -250
lda.b tcc__r0
sta -34 + __drawBattleUI_locals + 1,s
; gjmp_addr 93646 at 94892
jmp.w __local_125
; gsym_addr t 94892 a 93646 ind 94937
__local_124:
; gsym_addr t 94240 a 94975 ind 94975
; load 0
; type 0 reg 0x1f2 extra 0x42a9000
; ld2 [sp,-34],tcc__r0
; stack adjust: fc + disp - loc - 256 -250
lda -34 + __drawBattleUI_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x1f2 extra 0x42a9000
; ld2 [sp,-38],tcc__r1
; stack adjust: fc + disp - loc - 256 -254
lda -38 + __drawBattleUI_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x9c
; cmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 95481 ind 95481
; gsym_addr t 0 a 95520 ind 95520
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 95610 ind 95610
; cmp op 0x95 inv 1 v 243 r 95610
; cmp ne
bne +
; gsym_addr t 0 a 95700 ind 95700
brl __local_126
+
; gtst finished; t 95610
; load 0
; type 0 reg 0x1f2 extra 0x42a9000
; ld2 [sp,-34],tcc__r0
; stack adjust: fc + disp - loc - 256 -250
lda -34 + __drawBattleUI_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -34 r type 0x86)
; length xxy 2 vtop->type 0x0
clc
lda.b tcc__r0
adc.w #16
sta.b tcc__r0
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}40
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}40 + 0
; push2 imm r 0xf0
pea.w 20
; ldpush before load type 0x10 reg 0x0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; gjmp_addr 0 at 96406
jmp.w __local_127
; gsym_addr t 96406 a 0 ind 96447
__local_126:
; gsym_addr t 95610 a 96481 ind 96481
; load 0
; type 0 reg 0x1f2 extra 0x42a9000
; ld2 [sp,-34],tcc__r0
; stack adjust: fc + disp - loc - 256 -250
lda -34 + __drawBattleUI_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -34 r type 0x86)
; length xxy 2 vtop->type 0x0
clc
lda.b tcc__r0
adc.w #16
sta.b tcc__r0
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}41
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}41 + 0
; push2 imm r 0xf0
pea.w 20
; ldpush before load type 0x10 reg 0x0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
__local_127:
; gsym_addr t 96406 a 97148 ind 97148
; gjmp_addr 94315 at 97186
jmp.w __local_128
; gsym_addr t 97186 a 94315 ind 97231
__local_123:
; gsym_addr t 94073 a 97269 ind 97269
; gsym_addr t 0 a 94315 ind 97307
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}42
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}42 + 0
; push2 imm r 0xf0
pea.w 20
; push2 imm r 0xf0
pea.w 26
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}43
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}43 + 0
; push2 imm r 0xf0
pea.w 22
; push2 imm r 0xf0
pea.w 1
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; ldpush before load type 0x10 reg 0x3f0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [playerCharacter + 6], tcc__r0
lda.l playerCharacter + 6
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; ldpush before load type 0x10 reg 0x3f0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [playerCharacter + 4], tcc__r0
lda.l playerCharacter + 4
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}44
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}44 + 0
; ldpush before load type 0x4 reg 0x10f2
; load 0
; type 4 reg 0x10f2 extra 0x0
; ld4 #(sp) + -32,tcc__r0 (fr 0x10f2 ft 0x4 fc 0xffffffe0)
stz.b tcc__r0h
tsa
clc
adc #(-24 + __drawBattleUI_locals + 1)
sta.b tcc__r0
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; call r 0x2f0
jsr.l sprintf
; add sp, #12
tsa
clc
adc #12
tas
; ldpush before load type 0x4 reg 0x10f2
; load 0
; type 4 reg 0x10f2 extra 0x0
; ld4 #(sp) + -32,tcc__r0 (fr 0x10f2 ft 0x4 fc 0xffffffe0)
stz.b tcc__r0h
tsa
clc
adc #(-32 + __drawBattleUI_locals + 1)
sta.b tcc__r0
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; push2 imm r 0xf0
pea.w 22
; push2 imm r 0xf0
pea.w 14
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}45
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}45 + 0
; push2 imm r 0xf0
pea.w 24
; push2 imm r 0xf0
pea.w 1
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}46
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}46 + 0
; push2 imm r 0xf0
pea.w 25
; push2 imm r 0xf0
pea.w 1
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}47
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}47 + 0
; push2 imm r 0xf0
pea.w 26
; push2 imm r 0xf0
pea.w 1
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; ldpush before load type 0x10 reg 0x3f0
; load 0
; type 16 reg 0x3f0 extra 0x1de19950
; ld2 [currentBattle + 32], tcc__r0
lda.l currentBattle + 32
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}48
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}48 + 0
; ldpush before load type 0x4 reg 0x10f2
; load 0
; type 4 reg 0x10f2 extra 0x0
; ld4 #(sp) + -32,tcc__r0 (fr 0x10f2 ft 0x4 fc 0xffffffe0)
stz.b tcc__r0h
tsa
clc
adc #(-26 + __drawBattleUI_locals + 1)
sta.b tcc__r0
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; call r 0x2f0
jsr.l sprintf
; add sp, #10
tsa
clc
adc #10
tas
; ldpush before load type 0x4 reg 0x10f2
; load 0
; type 4 reg 0x10f2 extra 0x0
; ld4 #(sp) + -32,tcc__r0 (fr 0x10f2 ft 0x4 fc 0xffffffe0)
stz.b tcc__r0h
tsa
clc
adc #(-32 + __drawBattleUI_locals + 1)
sta.b tcc__r0
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; push2 imm r 0xf0
pea.w 24
; push2 imm r 0xf0
pea.w 20
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; gtst inv 1 t 0 v 240 r 100906 ind 100906
; load 0
; type 17 reg 0x53f0 extra 0x1de17d10
; ld1 [currentBattle + 37], tcc__r0
lda.w #0
sep #$20
lda.l currentBattle + 37
rep #$20
sta.b tcc__r0
; gsym_addr t 0 a 101098 ind 101098
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 101190 ind 101190
; cmp op 0x95 inv 1 v 243 r 101190
; cmp ne
bne +
; gsym_addr t 0 a 101283 ind 101283
brl __local_129
+
; gtst finished; t 101190
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}49
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}49 + 0
; push2 imm r 0xf0
pea.w 25
; push2 imm r 0xf0
pea.w 20
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; gjmp_addr 0 at 101604
jmp.w __local_130
; gsym_addr t 101604 a 0 ind 101646
__local_129:
; gsym_addr t 101190 a 101682 ind 101682
; gtst inv 1 t 0 v 240 r 101723 ind 101723
; load 0
; type 17 reg 0x53f0 extra 0x1de17700
; ld1 [currentBattle + 38], tcc__r0
lda.w #0
sep #$20
lda.l currentBattle + 38
rep #$20
sta.b tcc__r0
; gsym_addr t 0 a 101915 ind 101915
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 102007 ind 102007
; cmp op 0x95 inv 1 v 243 r 102007
; cmp ne
bne +
; gsym_addr t 0 a 102100 ind 102100
brl __local_131
+
; gtst finished; t 102007
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}50
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}50 + 0
; push2 imm r 0xf0
pea.w 25
; push2 imm r 0xf0
pea.w 20
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; gjmp_addr 0 at 102421
jmp.w __local_132
; gsym_addr t 102421 a 0 ind 102463
__local_131:
; gsym_addr t 102007 a 102499 ind 102499
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}51
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}51 + 0
; push2 imm r 0xf0
pea.w 25
; push2 imm r 0xf0
pea.w 20
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
__local_132:
; gsym_addr t 102421 a 102781 ind 102781
__local_130:
; gsym_addr t 101604 a 102822 ind 102822
; gsym_addr t 0 a 102863 ind 102863
; add sp, #__drawBattleUI_locals
.ifgr __drawBattleUI_locals 0
tsa
clc
adc #__drawBattleUI_locals
tas
.endif
rtl
.ENDS

.SECTION ".drawEnemySpritetext_0x16" SUPERFREE

drawEnemySprite:
; sub sp,#__drawEnemySprite_locals
.ifgr __drawEnemySprite_locals 0
tsa
sec
sbc #__drawEnemySprite_locals
tas
.endif
; load 0
; type 0 reg 0x3f0 extra 0x42a9000
; ld2 [currentBattle + 0], tcc__r0
lda.l currentBattle + 0
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc #0
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 103428 ind 103428
; gsym_addr t 0 a 103469 ind 103469
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 103561 ind 103561
; cmp op 0x95 inv 1 v 243 r 103561
; cmp ne
bne +
; gsym_addr t 0 a 103654 ind 103654
brl __local_133
+
; gtst finished; t 103561
; gjmp_addr 0 at 103734
jmp.w __local_134
; gsym_addr t 103734 a 0 ind 103776
__local_133:
; gsym_addr t 103561 a 103812 ind 103812
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x11 fc 0xffffffff
; st1 tcc__r0, [sp,-1]
; stack adjust: fc + disp - loc - 256 -254
sep #$20
lda.b tcc__r0
sta -1 + __drawEnemySprite_locals + 1,s
rep #$20
; load 0
; type 0 reg 0xf0 extra 0x4295000
; ld2 #200,tcc__r0
lda.w #200
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffffc
; st2 tcc__r0, [sp,-4]
; stack adjust: fc + disp - loc - 256 -254
lda.b tcc__r0
sta -4 + __drawEnemySprite_locals + 1,s
; load 0
; type 0 reg 0xf0 extra 0x4295000
; ld2 #80,tcc__r0
lda.w #80
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffffa
; st2 tcc__r0, [sp,-6]
; stack adjust: fc + disp - loc - 256 -254
lda.b tcc__r0
sta -6 + __drawEnemySprite_locals + 1,s
; load 0
; type 17 reg 0x51f2 extra 0x665c2021
; ld1 [sp,-1],tcc__r0
; stack adjust: fc + disp - loc - 256 -249
lda.w #0
sep #$20
lda -1 + __drawEnemySprite_locals + 1,s
rep #$20
sta.b tcc__r0
; push1 imm r 0xf0
sep #$20
lda #1
pha
rep #$20
; ldpush before load type 0x10 reg 0x0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l oamClear
; add sp, #3
tsa
clc
adc #3
tas
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x11 fc 0xfffffff9
; st1 tcc__r0, [sp,-7]
; stack adjust: fc + disp - loc - 256 -254
sep #$20
lda.b tcc__r0
sta -7 + __drawEnemySprite_locals + 1,s
rep #$20
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x11 fc 0xfffffff8
; st1 tcc__r0, [sp,-8]
; stack adjust: fc + disp - loc - 256 -254
sep #$20
lda.b tcc__r0
sta -8 + __drawEnemySprite_locals + 1,s
rep #$20
; load 0
; type 5 reg 0x3f0 extra 0x1de1c420
; ld2 [currentBattle + 2], tcc__r0
lda.l currentBattle + 2
sta.b tcc__r0
; gjmp_addr 0 at 105648
jmp.w __local_135
; gsym_addr t 105648 a 0 ind 105690
; gjmp_addr 0 at 105726
jmp.w __local_136
; gsym_addr t 105726 a 0 ind 105768
__local_135:
; gsym_addr t 105648 a 105804 ind 105804
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc #0
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 105955 ind 105955
; gsym_addr t 0 a 105996 ind 105996
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 106088 ind 106088
; cmp op 0x95 inv 1 v 243 r 106088
; cmp ne
bne +
; gsym_addr t 0 a 106181 ind 106181
brl __local_137
+
; gtst finished; t 106088
__local_136:
; gsym_addr t 105726 a 106261 ind 106261
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #16,tcc__r0
lda.w #16
sta.b tcc__r0
; store r 0x0 fr 0x51f2 ft 0x11 fc 0xfffffff9
; st1 tcc__r0, [sp,-7]
; stack adjust: fc + disp - loc - 256 -253
sep #$20
lda.b tcc__r0
sta -7 + __drawEnemySprite_locals + 1,s
rep #$20
; gjmp_addr 0 at 106566
jmp.w __local_138
; gsym_addr t 106566 a 0 ind 106608
; gjmp_addr 0 at 106644
jmp.w __local_139
; gsym_addr t 106644 a 0 ind 106686
__local_137:
; gsym_addr t 106088 a 106722 ind 106722
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #1
ldx #1
lda.b tcc__r0
sec
sbc #1
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 106873 ind 106873
; gsym_addr t 0 a 106914 ind 106914
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 107006 ind 107006
; cmp op 0x95 inv 1 v 243 r 107006
; cmp ne
bne +
; gsym_addr t 0 a 107099 ind 107099
brl __local_140
+
; gtst finished; t 107006
__local_139:
; gsym_addr t 106644 a 107179 ind 107179
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #32,tcc__r0
lda.w #32
sta.b tcc__r0
; store r 0x0 fr 0x51f2 ft 0x11 fc 0xfffffff9
; st1 tcc__r0, [sp,-7]
; stack adjust: fc + disp - loc - 256 -253
sep #$20
lda.b tcc__r0
sta -7 + __drawEnemySprite_locals + 1,s
rep #$20
; gjmp_addr 106566 at 107484
jmp.w __local_141
; gsym_addr t 107484 a 106566 ind 107531
; gjmp_addr 0 at 107572
jmp.w __local_142
; gsym_addr t 107572 a 0 ind 107614
__local_140:
; gsym_addr t 107006 a 107650 ind 107650
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #2
ldx #1
lda.b tcc__r0
sec
sbc #2
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 107801 ind 107801
; gsym_addr t 0 a 107842 ind 107842
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 107934 ind 107934
; cmp op 0x95 inv 1 v 243 r 107934
; cmp ne
bne +
; gsym_addr t 0 a 108027 ind 108027
brl __local_143
+
; gtst finished; t 107934
__local_142:
; gsym_addr t 107572 a 108107 ind 108107
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #48,tcc__r0
lda.w #48
sta.b tcc__r0
; store r 0x0 fr 0x51f2 ft 0x11 fc 0xfffffff9
; st1 tcc__r0, [sp,-7]
; stack adjust: fc + disp - loc - 256 -253
sep #$20
lda.b tcc__r0
sta -7 + __drawEnemySprite_locals + 1,s
rep #$20
; gjmp_addr 107484 at 108412
jmp.w __local_144
; gsym_addr t 108412 a 107484 ind 108459
__local_143:
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #16,tcc__r0
lda.w #16
sta.b tcc__r0
; store r 0x0 fr 0x51f2 ft 0x11 fc 0xfffffff9
; st1 tcc__r0, [sp,-7]
; stack adjust: fc + disp - loc - 256 -253
sep #$20
lda.b tcc__r0
sta -7 + __drawEnemySprite_locals + 1,s
rep #$20
; gjmp_addr 108412 at 108764
jmp.w __local_145
; gsym_addr t 108764 a 108412 ind 108811
; gsym_addr t 107934 a 108500 ind 108852
__local_138:
__local_141:
__local_144:
__local_145:
; gsym_addr t 108764 a 108893 ind 108893
; load 0
; type 17 reg 0x51f2 extra 0x665c2021
; ld1 [sp,-1],tcc__r0
; stack adjust: fc + disp - loc - 256 -247
lda.w #0
sep #$20
lda -1 + __drawEnemySprite_locals + 1,s
rep #$20
sta.b tcc__r0
; load 1
; type 17 reg 0x51f2 extra 0x75287265
; ld1 [sp,-7],tcc__r1
; stack adjust: fc + disp - loc - 256 -253
lda.w #0
sep #$20
lda -7 + __drawEnemySprite_locals + 1,s
rep #$20
sta.b tcc__r1
; ldpush before load type 0x11 reg 0x51f2
; load 2
; type 17 reg 0x51f2 extra 0x0
; ld1 [sp,-8],tcc__r2
; stack adjust: fc + disp - loc - 256 -254
lda.w #0
sep #$20
lda -8 + __drawEnemySprite_locals + 1,s
rep #$20
sta.b tcc__r2
; ldpush1 (type 0x11 reg 0x2) tcc__r2
sep #$20
lda.b tcc__r2
pha
rep #$20
; ldpush before load type 0x10 reg 0x1
; ldpush2 (type 0x10 reg 0x1) tcc__r1
pei (tcc__r1)
; push1 imm r 0xf0
sep #$20
lda #0
pha
rep #$20
; push1 imm r 0xf0
sep #$20
lda #0
pha
rep #$20
; push1 imm r 0xf0
sep #$20
lda #3
pha
rep #$20
; ldpush before load type 0x10 reg 0x1f2
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-6],tcc__r1
; stack adjust: fc + disp - loc - 256 -246
lda 0 + __drawEnemySprite_locals + 1,s
sta.b tcc__r1
; ldpush2 (type 0x10 reg 0x1) tcc__r1
pei (tcc__r1)
; ldpush before load type 0x10 reg 0x1f2
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-4],tcc__r1
; stack adjust: fc + disp - loc - 256 -242
lda 4 + __drawEnemySprite_locals + 1,s
sta.b tcc__r1
; ldpush2 (type 0x10 reg 0x1) tcc__r1
pei (tcc__r1)
; ldpush before load type 0x10 reg 0x0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l oamSet
; add sp, #12
tsa
clc
adc #12
tas
; call r 0x2f0
jsr.l oamUpdate
__local_134:
; gsym_addr t 103734 a 110541 ind 110541
; add sp, #__drawEnemySprite_locals
.ifgr __drawEnemySprite_locals 0
tsa
clc
adc #__drawEnemySprite_locals
tas
.endif
rtl
.ENDS

.SECTION ".updateBattleAnimationstext_0x17" SUPERFREE

updateBattleAnimations:
; sub sp,#__updateBattleAnimations_locals
.ifgr __updateBattleAnimations_locals 0
tsa
sec
sbc #__updateBattleAnimations_locals
tas
.endif
; load 0
; type 17 reg 0x53f0 extra 0x69747465
; ld1 [tccs__FUNC_updateBattleAnimations_animationFrame + 0], tcc__r0
lda.w #0
sep #$20
lda.l tccs__FUNC_updateBattleAnimations_animationFrame + 0
rep #$20
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x6bc45260
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 0 r type 0x4111)
; length xxy 2 vtop->type 0x0
inc.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x4111 fc 0x0
; st1 tcc__r0, [tccs__FUNC_updateBattleAnimations_animationFrame,0]
sep #$20
lda.b tcc__r0
sta.l tccs__FUNC_updateBattleAnimations_animationFrame + 0
rep #$20
; load 0
; type 16 reg 0x3f0 extra 0x42a9000
; ld2 [currentBattle + 20], tcc__r0
lda.l currentBattle + 20
sta.b tcc__r0
; gen_opi len 2 op 0x97
; ucmpcd tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc.w #0
tay
beq +
bcs ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 111843 ind 111843
; gsym_addr t 0 a 111884 ind 111884
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 111976 ind 111976
; cmp op 0x95 inv 1 v 243 r 111976
; cmp ne
bne +
; gsym_addr t 0 a 112069 ind 112069
brl __local_146
+
; gtst finished; t 111976
; load 0
; type 17 reg 0x53f0 extra 0x69747465
; ld1 [tccs__FUNC_updateBattleAnimations_animationFrame + 0], tcc__r0
lda.w #0
sep #$20
lda.l tccs__FUNC_updateBattleAnimations_animationFrame + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op %
; div #8, tcc__r0
ldx.b tcc__r0
lda.w #8
jsr.l tcc__div
stx.b tcc__r0
; gen_opi len 2 op 0x9c
; cmpcd tcc__r0, #4
ldx #1
lda.b tcc__r0
sec
sbc.w #4
tay
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 111976 v 5 r 112591 ind 112591
; gsym_addr t 111976 a 112637 ind 112637
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 111976 v 243 r 112734 ind 112734
; cmp op 0x95 inv 1 v 243 r 112734
; cmp ne
bne +
__local_146:
; gsym_addr t 111976 a 112832 ind 112832
brl __local_147
+
; gtst finished; t 112734
; gtst inv 1 t 0 v 245 r 112917 ind 112917
; VT_jmp r 112917 t 0 ji 1 inv 1 vtop->c.i 112734
; gsym_addr t 0 a 113010 ind 113010
; gtst finished; t 112734
; call r 0x2f0
jsr.l drawEnemySprite
__local_147:
; gsym_addr t 112734 a 113109 ind 113109
; load 0
; type 5 reg 0x3f0 extra 0x1de19ec0
; ld2 [currentBattle + 0], tcc__r0
lda.l currentBattle + 0
sta.b tcc__r0
; gjmp_addr 0 at 113268
jmp.w __local_148
; gsym_addr t 113268 a 0 ind 113310
; gjmp_addr 0 at 113346
jmp.w __local_149
; gsym_addr t 113346 a 0 ind 113388
__local_148:
; gsym_addr t 113268 a 113424 ind 113424
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #1
ldx #1
lda.b tcc__r0
sec
sbc #1
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 113575 ind 113575
; gsym_addr t 0 a 113616 ind 113616
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 113708 ind 113708
; cmp op 0x95 inv 1 v 243 r 113708
; cmp ne
bne +
; gsym_addr t 0 a 113801 ind 113801
brl __local_150
+
; gtst finished; t 113708
__local_149:
; gsym_addr t 113346 a 113881 ind 113881
; load 0
; type 17 reg 0x53f0 extra 0x69747465
; ld1 [tccs__FUNC_updateBattleAnimations_animationFrame + 0], tcc__r0
lda.w #0
sep #$20
lda.l tccs__FUNC_updateBattleAnimations_animationFrame + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x9f
; cmpcd tcc__r0, #30
ldx #1
lda.b tcc__r0
sec
sbc.w #30
tay
beq ++
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 114282 ind 114282
; gsym_addr t 0 a 114323 ind 114323
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 114415 ind 114415
; cmp op 0x95 inv 1 v 243 r 114415
; cmp ne
bne +
; gsym_addr t 0 a 114508 ind 114508
brl __local_151
+
; gtst finished; t 114415
; load 0
; type 5 reg 0xf0 extra 0x1de19ec0
; ld2 #2,tcc__r0
lda.w #2
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x5 fc 0x0
; st2 tcc__r0, [currentBattle,0]
lda.b tcc__r0
sta.l currentBattle + 0
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x24
; st1 tcc__r0, [currentBattle,36]
sep #$20
lda.b tcc__r0
sta.l currentBattle + 36
rep #$20
__local_151:
; gsym_addr t 114415 a 114989 ind 114989
; gjmp_addr 0 at 115030
jmp.w __local_152
; gsym_addr t 115030 a 0 ind 115072
; gjmp_addr 0 at 115108
jmp.w __local_153
; gsym_addr t 115108 a 0 ind 115150
__local_150:
; gsym_addr t 113708 a 115186 ind 115186
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #3
ldx #1
lda.b tcc__r0
sec
sbc #3
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 115337 ind 115337
; gsym_addr t 0 a 115378 ind 115378
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 115470 ind 115470
; cmp op 0x95 inv 1 v 243 r 115470
; cmp ne
bne +
; gsym_addr t 0 a 115563 ind 115563
brl __local_154
+
; gtst finished; t 115470
__local_153:
; gsym_addr t 115108 a 115643 ind 115643
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}52
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}52 + 0
; push2 imm r 0xf0
pea.w 10
; push2 imm r 0xf0
pea.w 10
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; load 0
; type 17 reg 0x53f0 extra 0x69747465
; ld1 [tccs__FUNC_updateBattleAnimations_animationFrame + 0], tcc__r0
lda.w #0
sep #$20
lda.l tccs__FUNC_updateBattleAnimations_animationFrame + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x9f
; cmpcd tcc__r0, #120
ldx #1
lda.b tcc__r0
sec
sbc.w #120
tay
beq ++
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 116287 ind 116287
; gsym_addr t 0 a 116328 ind 116328
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 116420 ind 116420
; cmp op 0x95 inv 1 v 243 r 116420
; cmp ne
bne +
; gsym_addr t 0 a 116513 ind 116513
brl __local_155
+
; gtst finished; t 116420
; call r 0x2f0
jsr.l endBattle
__local_155:
; gsym_addr t 116420 a 116624 ind 116624
; gjmp_addr 115030 at 116665
jmp.w __local_156
; gsym_addr t 116665 a 115030 ind 116712
; gjmp_addr 0 at 116753
jmp.w __local_157
; gsym_addr t 116753 a 0 ind 116795
__local_154:
; gsym_addr t 115470 a 116831 ind 116831
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #4
ldx #1
lda.b tcc__r0
sec
sbc #4
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 116982 ind 116982
; gsym_addr t 0 a 117023 ind 117023
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 117115 ind 117115
; cmp op 0x95 inv 1 v 243 r 117115
; cmp ne
bne +
; gsym_addr t 0 a 117208 ind 117208
brl __local_158
+
; gtst finished; t 117115
__local_157:
; gsym_addr t 116753 a 117288 ind 117288
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}53
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}53 + 0
; push2 imm r 0xf0
pea.w 10
; push2 imm r 0xf0
pea.w 10
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; load 0
; type 17 reg 0x53f0 extra 0x69747465
; ld1 [tccs__FUNC_updateBattleAnimations_animationFrame + 0], tcc__r0
lda.w #0
sep #$20
lda.l tccs__FUNC_updateBattleAnimations_animationFrame + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x9f
; cmpcd tcc__r0, #120
ldx #1
lda.b tcc__r0
sec
sbc.w #120
tay
beq ++
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 117932 ind 117932
; gsym_addr t 0 a 117973 ind 117973
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 118065 ind 118065
; cmp op 0x95 inv 1 v 243 r 118065
; cmp ne
bne +
; gsym_addr t 0 a 118158 ind 118158
brl __local_159
+
; gtst finished; t 118065
; call r 0x2f0
jsr.l endBattle
__local_159:
; gsym_addr t 118065 a 118269 ind 118269
; gjmp_addr 116665 at 118310
jmp.w __local_160
; gsym_addr t 118310 a 116665 ind 118357
; gjmp_addr 0 at 118398
jmp.w __local_161
; gsym_addr t 118398 a 0 ind 118440
__local_158:
; gsym_addr t 117115 a 118476 ind 118476
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #5
ldx #1
lda.b tcc__r0
sec
sbc #5
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 118627 ind 118627
; gsym_addr t 0 a 118668 ind 118668
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 118760 ind 118760
; cmp op 0x95 inv 1 v 243 r 118760
; cmp ne
bne +
; gsym_addr t 0 a 118853 ind 118853
brl __local_162
+
; gtst finished; t 118760
__local_161:
; gsym_addr t 118398 a 118933 ind 118933
; push4 imm r 0x12f0
pea.w :tccs_{WLA_FILENAME}_L.{WLA_FILENAME}54
pea.w tccs_{WLA_FILENAME}_L.{WLA_FILENAME}54 + 0
; push2 imm r 0xf0
pea.w 10
; push2 imm r 0xf0
pea.w 10
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; load 0
; type 17 reg 0x53f0 extra 0x69747465
; ld1 [tccs__FUNC_updateBattleAnimations_animationFrame + 0], tcc__r0
lda.w #0
sep #$20
lda.l tccs__FUNC_updateBattleAnimations_animationFrame + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x9f
; cmpcd tcc__r0, #120
ldx #1
lda.b tcc__r0
sec
sbc.w #120
tay
beq ++
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 119577 ind 119577
; gsym_addr t 0 a 119618 ind 119618
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 119710 ind 119710
; cmp op 0x95 inv 1 v 243 r 119710
; cmp ne
bne +
; gsym_addr t 0 a 119803 ind 119803
brl __local_163
+
; gtst finished; t 119710
; call r 0x2f0
jsr.l endBattle
__local_163:
; gsym_addr t 119710 a 119914 ind 119914
; gjmp_addr 118310 at 119955
jmp.w __local_164
; gsym_addr t 119955 a 118310 ind 120002
__local_162:
; gjmp_addr 119955 at 120043
jmp.w __local_165
; gsym_addr t 120043 a 119955 ind 120090
; gsym_addr t 118760 a 120043 ind 120131
__local_152:
__local_156:
__local_160:
__local_164:
__local_165:
; gsym_addr t 120043 a 120172 ind 120172
; gsym_addr t 0 a 120213 ind 120213
; add sp, #__updateBattleAnimations_locals
.ifgr __updateBattleAnimations_locals 0
tsa
clc
adc #__updateBattleAnimations_locals
tas
.endif
rtl
.ENDS
.RAMSECTION "ram{WLA_FILENAME}.data" APPENDTO "globram.data"

currentBattle dsb 40
tccs__FUNC_updateBattleAnimations_animationFrame dsb 1

.ENDS

.SECTION "{WLA_FILENAME}.data" APPENDTO "glob.data"

.db $0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0
.db $0
.ENDS

.SECTION ".rodata" SUPERFREE

tccs_{WLA_FILENAME}_L.{WLA_FILENAME}20: .db $53,$4c,$49,$4d,$45,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}21: .db $47,$4f,$42,$4c,$49,$4e,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}22: .db $4f,$52,$43,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}23: .db $53,$4b,$45,$4c,$45,$54,$4f,$4e,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}24: .db $44,$52,$41,$47,$4f,$4e,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}25: .db $54,$49,$4d,$45,$20,$4c,$4f,$52,$44,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}26: .db $20,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}27: .db $3d,$3d,$3d,$20,$42,$41,$54,$54,$4c,$45,$20,$3d,$3d,$3d,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}28: .db $50,$4c,$41,$59,$45,$52,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}29: .db $45,$4e,$45,$4d,$59,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}30: .db $20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}31: .db $50,$4c,$41,$59,$45,$52,$20,$48,$50,$3a,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}32: .db $25,$64,$2f,$25,$64,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}33: .db $5b,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}34: .db $3d,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}35: .db $20,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}36: .db $5d,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}37: .db $45,$4e,$45,$4d,$59,$20,$48,$50,$3a,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}38: .db $25,$64,$2f,$25,$64,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}39: .db $5b,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}40: .db $3d,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}41: .db $20,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}42: .db $5d,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}43: .db $54,$49,$4d,$45,$20,$45,$4e,$45,$52,$47,$59,$3a,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}44: .db $25,$64,$2f,$25,$64,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}45: .db $41,$3a,$41,$54,$54,$41,$43,$4b,$20,$20,$42,$3a,$44,$45,$46,$45,$4e,$44,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}46: .db $58,$3a,$54,$49,$4d,$45,$20,$53,$54,$4f,$50,$20,$20,$59,$3a,$53,$4c,$4f,$57,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}47: .db $4c,$3a,$52,$45,$57,$49,$4e,$44,$20,$20,$52,$3a,$45,$53,$43,$41,$50,$45,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}48: .db $54,$55,$52,$4e,$3a,$20,$25,$64,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}49: .db $54,$49,$4d,$45,$20,$53,$54,$4f,$50,$21,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}50: .db $53,$4c,$4f,$57,$20,$4d,$4f,$54,$49,$4f,$4e,$21,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}51: .db $20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}52: .db $56,$49,$43,$54,$4f,$52,$59,$21,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}53: .db $44,$45,$46,$45,$41,$54,$21,$0
tccs_{WLA_FILENAME}_L.{WLA_FILENAME}54: .db $45,$53,$43,$41,$50,$45,$44,$21,$0
.ENDS

.RAMSECTION ".bss" BANK $7e SLOT 2
tccs_{WLA_FILENAME}_enemyDefinitions dsb 180
.ENDS
